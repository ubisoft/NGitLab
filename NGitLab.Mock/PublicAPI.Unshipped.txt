abstract NGitLab.Mock.File.Content.get -> byte[]
abstract NGitLab.Mock.Note.NoteableType.get -> string
abstract NGitLab.Mock.Note.NoticableId.get -> long
abstract NGitLab.Mock.Note.NoticableIid.get -> long
NGitLab.Mock.Badge
NGitLab.Mock.Badge.Badge() -> void
NGitLab.Mock.Badge.Id.get -> long
NGitLab.Mock.Badge.Id.set -> void
NGitLab.Mock.Badge.ImageUrl.get -> string
NGitLab.Mock.Badge.ImageUrl.set -> void
NGitLab.Mock.Badge.Kind.get -> NGitLab.Models.BadgeKind
NGitLab.Mock.Badge.LinkUrl.get -> string
NGitLab.Mock.Badge.LinkUrl.set -> void
NGitLab.Mock.Badge.RenderedImageUrl.get -> string
NGitLab.Mock.Badge.RenderedImageUrl.set -> void
NGitLab.Mock.Badge.RenderedLinkUrl.get -> string
NGitLab.Mock.Badge.RenderedLinkUrl.set -> void
NGitLab.Mock.Badge.ToBadgeModel() -> NGitLab.Models.Badge
NGitLab.Mock.BadgeCollection
NGitLab.Mock.BadgeCollection.Add(string linkUrl, string imageUrl) -> NGitLab.Mock.Badge
NGitLab.Mock.BadgeCollection.BadgeCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.BadgeCollection.GetById(long id) -> NGitLab.Mock.Badge
NGitLab.Mock.Change
NGitLab.Mock.Change.AMode.get -> long
NGitLab.Mock.Change.AMode.set -> void
NGitLab.Mock.Change.BMode.get -> long
NGitLab.Mock.Change.BMode.set -> void
NGitLab.Mock.Change.Change() -> void
NGitLab.Mock.Change.DeletedFile.get -> bool
NGitLab.Mock.Change.DeletedFile.set -> void
NGitLab.Mock.Change.Diff.get -> string
NGitLab.Mock.Change.Diff.set -> void
NGitLab.Mock.Change.NewFile.get -> bool
NGitLab.Mock.Change.NewFile.set -> void
NGitLab.Mock.Change.NewPath.get -> string
NGitLab.Mock.Change.NewPath.set -> void
NGitLab.Mock.Change.OldPath.get -> string
NGitLab.Mock.Change.OldPath.set -> void
NGitLab.Mock.Change.RenamedFile.get -> bool
NGitLab.Mock.Change.RenamedFile.set -> void
NGitLab.Mock.Change.ToChange() -> NGitLab.Models.Change
NGitLab.Mock.Clients.LibGit2SharpExtensions
NGitLab.Mock.Collection<T>
NGitLab.Mock.Collection<T>.Clear() -> void
NGitLab.Mock.Collection<T>.Collection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.Collection<T>.CollectionChanged -> System.Collections.Specialized.NotifyCollectionChangedEventHandler
NGitLab.Mock.Collection<T>.Contains(T item) -> bool
NGitLab.Mock.Collection<T>.Count.get -> int
NGitLab.Mock.Collection<T>.GetEnumerator() -> System.Collections.Generic.IEnumerator<T>
NGitLab.Mock.Collection<T>.Parent.get -> NGitLab.Mock.GitLabObject
NGitLab.Mock.Collection<T>.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
NGitLab.Mock.Collection<T>.Remove(T item) -> bool
NGitLab.Mock.Collection<T>.Server.get -> NGitLab.Mock.GitLabServer
NGitLab.Mock.CommitAction
NGitLab.Mock.CommitAction.chmod = 4 -> NGitLab.Mock.CommitAction
NGitLab.Mock.CommitAction.Create = 0 -> NGitLab.Mock.CommitAction
NGitLab.Mock.CommitAction.Delete = 1 -> NGitLab.Mock.CommitAction
NGitLab.Mock.CommitAction.Move = 2 -> NGitLab.Mock.CommitAction
NGitLab.Mock.CommitAction.Update = 3 -> NGitLab.Mock.CommitAction
NGitLab.Mock.CommitInfo
NGitLab.Mock.CommitInfo.CommitInfo() -> void
NGitLab.Mock.CommitInfo.Sha.get -> string
NGitLab.Mock.CommitInfo.Sha.set -> void
NGitLab.Mock.CommitInfo.Status.get -> string
NGitLab.Mock.CommitInfo.Status.set -> void
NGitLab.Mock.CommitInfoCollection
NGitLab.Mock.CommitInfoCollection.CommitInfoCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.CommitInfoCollection.GetOrAdd(string sha) -> NGitLab.Mock.CommitInfo
NGitLab.Mock.CommitStatus
NGitLab.Mock.CommitStatus.CommitStatus() -> void
NGitLab.Mock.CommitStatus.Coverage.get -> int?
NGitLab.Mock.CommitStatus.Coverage.set -> void
NGitLab.Mock.CommitStatus.Description.get -> string
NGitLab.Mock.CommitStatus.Description.set -> void
NGitLab.Mock.CommitStatus.Name.get -> string
NGitLab.Mock.CommitStatus.Name.set -> void
NGitLab.Mock.CommitStatus.Parent.get -> NGitLab.Mock.Project
NGitLab.Mock.CommitStatus.Ref.get -> string
NGitLab.Mock.CommitStatus.Ref.set -> void
NGitLab.Mock.CommitStatus.Sha.get -> string
NGitLab.Mock.CommitStatus.Sha.set -> void
NGitLab.Mock.CommitStatus.Status.get -> string
NGitLab.Mock.CommitStatus.Status.set -> void
NGitLab.Mock.CommitStatus.TargetUrl.get -> string
NGitLab.Mock.CommitStatus.TargetUrl.set -> void
NGitLab.Mock.CommitStatus.ToClientCommitStatus() -> NGitLab.Models.CommitStatus
NGitLab.Mock.CommitStatus.ToClientCommitStatusCreate() -> NGitLab.Models.CommitStatusCreate
NGitLab.Mock.CommitStatusCollection
NGitLab.Mock.CommitStatusCollection.CommitStatusCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.Config.GitLabCollection<TItem, TParent>
NGitLab.Mock.Config.GitLabCollection<TItem, TParent>.GitLabCollection(TParent parent) -> void
NGitLab.Mock.Config.GitLabCollection<TItem>
NGitLab.Mock.Config.GitLabCollection<TItem>.GitLabCollection(object parent) -> void
NGitLab.Mock.Config.GitLabComment
NGitLab.Mock.Config.GitLabComment.Author.get -> string
NGitLab.Mock.Config.GitLabComment.Author.set -> void
NGitLab.Mock.Config.GitLabComment.CreatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabComment.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabComment.GitLabComment() -> void
NGitLab.Mock.Config.GitLabComment.Message.get -> string
NGitLab.Mock.Config.GitLabComment.Message.set -> void
NGitLab.Mock.Config.GitLabComment.Resolvable.get -> bool
NGitLab.Mock.Config.GitLabComment.Resolvable.set -> void
NGitLab.Mock.Config.GitLabComment.Resolved.get -> bool
NGitLab.Mock.Config.GitLabComment.Resolved.set -> void
NGitLab.Mock.Config.GitLabComment.System.get -> bool
NGitLab.Mock.Config.GitLabComment.System.set -> void
NGitLab.Mock.Config.GitLabComment.Thread.get -> string
NGitLab.Mock.Config.GitLabComment.Thread.set -> void
NGitLab.Mock.Config.GitLabComment.UpdatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabComment.UpdatedAt.set -> void
NGitLab.Mock.Config.GitLabCommentsCollection
NGitLab.Mock.Config.GitLabCommit
NGitLab.Mock.Config.GitLabCommit.Alias.get -> string
NGitLab.Mock.Config.GitLabCommit.Alias.set -> void
NGitLab.Mock.Config.GitLabCommit.DeleteSourceBranch.get -> bool
NGitLab.Mock.Config.GitLabCommit.DeleteSourceBranch.set -> void
NGitLab.Mock.Config.GitLabCommit.Files.get -> System.Collections.Generic.IList<NGitLab.Mock.Config.GitLabFileDescriptor>
NGitLab.Mock.Config.GitLabCommit.FromBranch.get -> string
NGitLab.Mock.Config.GitLabCommit.FromBranch.set -> void
NGitLab.Mock.Config.GitLabCommit.GitLabCommit() -> void
NGitLab.Mock.Config.GitLabCommit.Message.get -> string
NGitLab.Mock.Config.GitLabCommit.Message.set -> void
NGitLab.Mock.Config.GitLabCommit.SourceBranch.get -> string
NGitLab.Mock.Config.GitLabCommit.SourceBranch.set -> void
NGitLab.Mock.Config.GitLabCommit.SubModules.get -> System.Collections.Generic.IList<NGitLab.Mock.Config.GitLabSubModuleDescriptor>
NGitLab.Mock.Config.GitLabCommit.Tags.get -> System.Collections.Generic.IList<string>
NGitLab.Mock.Config.GitLabCommit.TargetBranch.get -> string
NGitLab.Mock.Config.GitLabCommit.TargetBranch.set -> void
NGitLab.Mock.Config.GitLabCommit.User.get -> string
NGitLab.Mock.Config.GitLabCommit.User.set -> void
NGitLab.Mock.Config.GitLabCommitsCollection
NGitLab.Mock.Config.GitLabConfig
NGitLab.Mock.Config.GitLabConfig.DefaultBranch.get -> string
NGitLab.Mock.Config.GitLabConfig.DefaultBranch.set -> void
NGitLab.Mock.Config.GitLabConfig.DefaultUser.get -> string
NGitLab.Mock.Config.GitLabConfig.DefaultUser.set -> void
NGitLab.Mock.Config.GitLabConfig.DefaultVisibility.get -> NGitLab.Models.VisibilityLevel
NGitLab.Mock.Config.GitLabConfig.DefaultVisibility.set -> void
NGitLab.Mock.Config.GitLabConfig.GitLabConfig() -> void
NGitLab.Mock.Config.GitLabConfig.Groups.get -> NGitLab.Mock.Config.GitLabGroupsCollection
NGitLab.Mock.Config.GitLabConfig.Projects.get -> NGitLab.Mock.Config.GitLabProjectsCollection
NGitLab.Mock.Config.GitLabConfig.Serialize() -> string
NGitLab.Mock.Config.GitLabConfig.Url.get -> string
NGitLab.Mock.Config.GitLabConfig.Url.set -> void
NGitLab.Mock.Config.GitLabConfig.Users.get -> NGitLab.Mock.Config.GitLabUsersCollection
NGitLab.Mock.Config.GitLabFileDescriptor
NGitLab.Mock.Config.GitLabFileDescriptor.Content.get -> string
NGitLab.Mock.Config.GitLabFileDescriptor.Content.set -> void
NGitLab.Mock.Config.GitLabFileDescriptor.GitLabFileDescriptor() -> void
NGitLab.Mock.Config.GitLabFileDescriptor.Path.get -> string
NGitLab.Mock.Config.GitLabFileDescriptor.Path.set -> void
NGitLab.Mock.Config.GitLabGroup
NGitLab.Mock.Config.GitLabGroup.Description.get -> string
NGitLab.Mock.Config.GitLabGroup.Description.set -> void
NGitLab.Mock.Config.GitLabGroup.GitLabGroup() -> void
NGitLab.Mock.Config.GitLabGroup.Labels.get -> NGitLab.Mock.Config.GitLabLabelsCollection
NGitLab.Mock.Config.GitLabGroup.Milestones.get -> NGitLab.Mock.Config.GitLabMilestonesCollection
NGitLab.Mock.Config.GitLabGroup.Name.get -> string
NGitLab.Mock.Config.GitLabGroup.Name.set -> void
NGitLab.Mock.Config.GitLabGroup.Namespace.get -> string
NGitLab.Mock.Config.GitLabGroup.Namespace.set -> void
NGitLab.Mock.Config.GitLabGroup.Path.get -> string
NGitLab.Mock.Config.GitLabGroup.Path.set -> void
NGitLab.Mock.Config.GitLabGroup.Permissions.get -> NGitLab.Mock.Config.GitLabPermissionsCollection
NGitLab.Mock.Config.GitLabGroup.Visibility.get -> NGitLab.Models.VisibilityLevel?
NGitLab.Mock.Config.GitLabGroup.Visibility.set -> void
NGitLab.Mock.Config.GitLabGroupsCollection
NGitLab.Mock.Config.GitLabHelpers
NGitLab.Mock.Config.GitLabIssue
NGitLab.Mock.Config.GitLabIssue.Assignee.get -> string
NGitLab.Mock.Config.GitLabIssue.Assignee.set -> void
NGitLab.Mock.Config.GitLabIssue.Author.get -> string
NGitLab.Mock.Config.GitLabIssue.Author.set -> void
NGitLab.Mock.Config.GitLabIssue.ClosedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabIssue.ClosedAt.set -> void
NGitLab.Mock.Config.GitLabIssue.Comments.get -> NGitLab.Mock.Config.GitLabCommentsCollection
NGitLab.Mock.Config.GitLabIssue.CreatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabIssue.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabIssue.Description.get -> string
NGitLab.Mock.Config.GitLabIssue.Description.set -> void
NGitLab.Mock.Config.GitLabIssue.GitLabIssue() -> void
NGitLab.Mock.Config.GitLabIssue.Labels.get -> System.Collections.Generic.IList<string>
NGitLab.Mock.Config.GitLabIssue.Milestone.get -> string
NGitLab.Mock.Config.GitLabIssue.Milestone.set -> void
NGitLab.Mock.Config.GitLabIssue.Title.get -> string
NGitLab.Mock.Config.GitLabIssue.Title.set -> void
NGitLab.Mock.Config.GitLabIssue.UpdatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabIssue.UpdatedAt.set -> void
NGitLab.Mock.Config.GitLabIssuesCollection
NGitLab.Mock.Config.GitLabJob
NGitLab.Mock.Config.GitLabJob.AllowFailure.get -> bool
NGitLab.Mock.Config.GitLabJob.AllowFailure.set -> void
NGitLab.Mock.Config.GitLabJob.CreatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabJob.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabJob.DownstreamPipeline.get -> NGitLab.Mock.Config.GitLabPipeline
NGitLab.Mock.Config.GitLabJob.DownstreamPipeline.set -> void
NGitLab.Mock.Config.GitLabJob.FinishedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabJob.FinishedAt.set -> void
NGitLab.Mock.Config.GitLabJob.GitLabJob() -> void
NGitLab.Mock.Config.GitLabJob.Name.get -> string
NGitLab.Mock.Config.GitLabJob.Name.set -> void
NGitLab.Mock.Config.GitLabJob.Stage.get -> string
NGitLab.Mock.Config.GitLabJob.Stage.set -> void
NGitLab.Mock.Config.GitLabJob.StartedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabJob.StartedAt.set -> void
NGitLab.Mock.Config.GitLabJob.Status.get -> NGitLab.JobStatus
NGitLab.Mock.Config.GitLabJob.Status.set -> void
NGitLab.Mock.Config.GitLabJob.TagList.get -> string[]
NGitLab.Mock.Config.GitLabJob.TagList.set -> void
NGitLab.Mock.Config.GitLabJobsCollection
NGitLab.Mock.Config.GitLabLabel
NGitLab.Mock.Config.GitLabLabel.Color.get -> string
NGitLab.Mock.Config.GitLabLabel.Color.set -> void
NGitLab.Mock.Config.GitLabLabel.Description.get -> string
NGitLab.Mock.Config.GitLabLabel.Description.set -> void
NGitLab.Mock.Config.GitLabLabel.GitLabLabel() -> void
NGitLab.Mock.Config.GitLabLabel.Name.get -> string
NGitLab.Mock.Config.GitLabLabel.Name.set -> void
NGitLab.Mock.Config.GitLabLabelsCollection
NGitLab.Mock.Config.GitLabMergeRequest
NGitLab.Mock.Config.GitLabMergeRequest.Approvers.get -> System.Collections.Generic.IList<string>
NGitLab.Mock.Config.GitLabMergeRequest.Assignee.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.Assignee.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.Author.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.Author.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.ClosedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMergeRequest.ClosedAt.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.Comments.get -> NGitLab.Mock.Config.GitLabCommentsCollection
NGitLab.Mock.Config.GitLabMergeRequest.CreatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMergeRequest.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.Description.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.Description.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.GitLabMergeRequest() -> void
NGitLab.Mock.Config.GitLabMergeRequest.Labels.get -> System.Collections.Generic.IList<string>
NGitLab.Mock.Config.GitLabMergeRequest.MergedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMergeRequest.MergedAt.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.Milestone.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.Milestone.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.SourceBranch.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.SourceBranch.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.TargetBranch.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.TargetBranch.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.Title.get -> string
NGitLab.Mock.Config.GitLabMergeRequest.Title.set -> void
NGitLab.Mock.Config.GitLabMergeRequest.UpdatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMergeRequest.UpdatedAt.set -> void
NGitLab.Mock.Config.GitLabMergeRequestsCollection
NGitLab.Mock.Config.GitLabMilestone
NGitLab.Mock.Config.GitLabMilestone.ClosedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMilestone.ClosedAt.set -> void
NGitLab.Mock.Config.GitLabMilestone.CreatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMilestone.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabMilestone.Description.get -> string
NGitLab.Mock.Config.GitLabMilestone.Description.set -> void
NGitLab.Mock.Config.GitLabMilestone.DueDate.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMilestone.DueDate.set -> void
NGitLab.Mock.Config.GitLabMilestone.GitLabMilestone() -> void
NGitLab.Mock.Config.GitLabMilestone.StartDate.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMilestone.StartDate.set -> void
NGitLab.Mock.Config.GitLabMilestone.Title.get -> string
NGitLab.Mock.Config.GitLabMilestone.Title.set -> void
NGitLab.Mock.Config.GitLabMilestone.UpdatedAt.get -> System.DateTime?
NGitLab.Mock.Config.GitLabMilestone.UpdatedAt.set -> void
NGitLab.Mock.Config.GitLabMilestonesCollection
NGitLab.Mock.Config.GitLabObject
NGitLab.Mock.Config.GitLabObject.GitLabObject() -> void
NGitLab.Mock.Config.GitLabObject.Id.get -> long
NGitLab.Mock.Config.GitLabObject.Id.set -> void
NGitLab.Mock.Config.GitLabObject.ParentObject.get -> object
NGitLab.Mock.Config.GitLabObject<TParent>
NGitLab.Mock.Config.GitLabObject<TParent>.GitLabObject() -> void
NGitLab.Mock.Config.GitLabObject<TParent>.Parent.get -> TParent
NGitLab.Mock.Config.GitLabPermission
NGitLab.Mock.Config.GitLabPermission.GitLabPermission() -> void
NGitLab.Mock.Config.GitLabPermission.Group.get -> string
NGitLab.Mock.Config.GitLabPermission.Group.set -> void
NGitLab.Mock.Config.GitLabPermission.Level.get -> NGitLab.Models.AccessLevel
NGitLab.Mock.Config.GitLabPermission.Level.set -> void
NGitLab.Mock.Config.GitLabPermission.User.get -> string
NGitLab.Mock.Config.GitLabPermission.User.set -> void
NGitLab.Mock.Config.GitLabPermissionsCollection
NGitLab.Mock.Config.GitLabPipeline
NGitLab.Mock.Config.GitLabPipeline.Commit.get -> string
NGitLab.Mock.Config.GitLabPipeline.Commit.set -> void
NGitLab.Mock.Config.GitLabPipeline.GitLabPipeline() -> void
NGitLab.Mock.Config.GitLabPipeline.GitLabPipeline(NGitLab.Mock.Config.GitLabProject project) -> void
NGitLab.Mock.Config.GitLabPipeline.Jobs.get -> NGitLab.Mock.Config.GitLabJobsCollection
NGitLab.Mock.Config.GitLabPipelinesCollection
NGitLab.Mock.Config.GitLabProject
NGitLab.Mock.Config.GitLabProject.CloneParameters.get -> string
NGitLab.Mock.Config.GitLabProject.CloneParameters.set -> void
NGitLab.Mock.Config.GitLabProject.ClonePath.get -> string
NGitLab.Mock.Config.GitLabProject.ClonePath.set -> void
NGitLab.Mock.Config.GitLabProject.Commits.get -> NGitLab.Mock.Config.GitLabCommitsCollection
NGitLab.Mock.Config.GitLabProject.DefaultBranch.get -> string
NGitLab.Mock.Config.GitLabProject.DefaultBranch.set -> void
NGitLab.Mock.Config.GitLabProject.Description.get -> string
NGitLab.Mock.Config.GitLabProject.Description.set -> void
NGitLab.Mock.Config.GitLabProject.ForkingAccessLevel.get -> NGitLab.Models.RepositoryAccessLevel
NGitLab.Mock.Config.GitLabProject.ForkingAccessLevel.set -> void
NGitLab.Mock.Config.GitLabProject.GitLabProject() -> void
NGitLab.Mock.Config.GitLabProject.Issues.get -> NGitLab.Mock.Config.GitLabIssuesCollection
NGitLab.Mock.Config.GitLabProject.Labels.get -> NGitLab.Mock.Config.GitLabLabelsCollection
NGitLab.Mock.Config.GitLabProject.MergeRequests.get -> NGitLab.Mock.Config.GitLabMergeRequestsCollection
NGitLab.Mock.Config.GitLabProject.Milestones.get -> NGitLab.Mock.Config.GitLabMilestonesCollection
NGitLab.Mock.Config.GitLabProject.Name.get -> string
NGitLab.Mock.Config.GitLabProject.Name.set -> void
NGitLab.Mock.Config.GitLabProject.Namespace.get -> string
NGitLab.Mock.Config.GitLabProject.Namespace.set -> void
NGitLab.Mock.Config.GitLabProject.Path.get -> string
NGitLab.Mock.Config.GitLabProject.Path.set -> void
NGitLab.Mock.Config.GitLabProject.Permissions.get -> NGitLab.Mock.Config.GitLabPermissionsCollection
NGitLab.Mock.Config.GitLabProject.Pipelines.get -> NGitLab.Mock.Config.GitLabPipelinesCollection
NGitLab.Mock.Config.GitLabProject.Releases.get -> NGitLab.Mock.Config.GitLabReleaseInfoCollection
NGitLab.Mock.Config.GitLabProject.Visibility.get -> NGitLab.Models.VisibilityLevel?
NGitLab.Mock.Config.GitLabProject.Visibility.set -> void
NGitLab.Mock.Config.GitLabProjectsCollection
NGitLab.Mock.Config.GitLabReleaseInfo
NGitLab.Mock.Config.GitLabReleaseInfo.Author.get -> string
NGitLab.Mock.Config.GitLabReleaseInfo.Author.set -> void
NGitLab.Mock.Config.GitLabReleaseInfo.CreatedAt.get -> System.DateTime
NGitLab.Mock.Config.GitLabReleaseInfo.CreatedAt.set -> void
NGitLab.Mock.Config.GitLabReleaseInfo.GitLabReleaseInfo() -> void
NGitLab.Mock.Config.GitLabReleaseInfo.ReleasedAt.get -> System.DateTime
NGitLab.Mock.Config.GitLabReleaseInfo.ReleasedAt.set -> void
NGitLab.Mock.Config.GitLabReleaseInfo.TagName.get -> string
NGitLab.Mock.Config.GitLabReleaseInfo.TagName.set -> void
NGitLab.Mock.Config.GitLabReleaseInfoCollection
NGitLab.Mock.Config.GitLabSubModuleDescriptor
NGitLab.Mock.Config.GitLabSubModuleDescriptor.GitLabSubModuleDescriptor() -> void
NGitLab.Mock.Config.GitLabSubModuleDescriptor.ProjectName.get -> string
NGitLab.Mock.Config.GitLabSubModuleDescriptor.ProjectName.init -> void
NGitLab.Mock.Config.GitLabUser
NGitLab.Mock.Config.GitLabUser.AvatarUrl.get -> string
NGitLab.Mock.Config.GitLabUser.AvatarUrl.set -> void
NGitLab.Mock.Config.GitLabUser.Email.get -> string
NGitLab.Mock.Config.GitLabUser.Email.set -> void
NGitLab.Mock.Config.GitLabUser.GitLabUser() -> void
NGitLab.Mock.Config.GitLabUser.IsAdmin.get -> bool
NGitLab.Mock.Config.GitLabUser.IsAdmin.set -> void
NGitLab.Mock.Config.GitLabUser.Name.get -> string
NGitLab.Mock.Config.GitLabUser.Name.set -> void
NGitLab.Mock.Config.GitLabUser.Username.get -> string
NGitLab.Mock.Config.GitLabUser.Username.set -> void
NGitLab.Mock.Config.GitLabUsersCollection
NGitLab.Mock.EffectivePermissions
NGitLab.Mock.EffectivePermissions.GetAccessLevel(NGitLab.Mock.User user) -> NGitLab.Models.AccessLevel?
NGitLab.Mock.EffectivePermissions.GetEffectivePermission(NGitLab.Mock.User user) -> NGitLab.Mock.EffectiveUserPermission
NGitLab.Mock.EffectivePermissions.Permissions.get -> System.Collections.Generic.IReadOnlyCollection<NGitLab.Mock.EffectiveUserPermission>
NGitLab.Mock.EffectiveUserPermission
NGitLab.Mock.EffectiveUserPermission.AccessLevel.get -> NGitLab.Models.AccessLevel
NGitLab.Mock.EffectiveUserPermission.ToMembershipClient() -> NGitLab.Models.Membership
NGitLab.Mock.EffectiveUserPermission.User.get -> NGitLab.Mock.User
NGitLab.Mock.Event
NGitLab.Mock.Event.Action.get -> NGitLab.DynamicEnum<NGitLab.Models.EventAction>
NGitLab.Mock.Event.Action.set -> void
NGitLab.Mock.Event.AuthorId.get -> long
NGitLab.Mock.Event.AuthorId.set -> void
NGitLab.Mock.Event.AuthorUserName.get -> string
NGitLab.Mock.Event.AuthorUserName.set -> void
NGitLab.Mock.Event.CreatedAt.get -> System.DateTime
NGitLab.Mock.Event.CreatedAt.set -> void
NGitLab.Mock.Event.Event() -> void
NGitLab.Mock.Event.Id.get -> long
NGitLab.Mock.Event.Id.set -> void
NGitLab.Mock.Event.Note.get -> NGitLab.Mock.Note
NGitLab.Mock.Event.Note.set -> void
NGitLab.Mock.Event.ProjectId.get -> long
NGitLab.Mock.Event.ProjectId.set -> void
NGitLab.Mock.Event.PushData.get -> NGitLab.Models.PushData
NGitLab.Mock.Event.PushData.set -> void
NGitLab.Mock.Event.TargetId.get -> long?
NGitLab.Mock.Event.TargetId.set -> void
NGitLab.Mock.Event.TargetIId.get -> long?
NGitLab.Mock.Event.TargetIId.set -> void
NGitLab.Mock.Event.TargetTitle.get -> string
NGitLab.Mock.Event.TargetTitle.set -> void
NGitLab.Mock.Event.TargetType.get -> NGitLab.DynamicEnum<NGitLab.Models.EventTargetType>
NGitLab.Mock.Event.TargetType.set -> void
NGitLab.Mock.Event.Title.get -> string
NGitLab.Mock.Event.Title.set -> void
NGitLab.Mock.Event.ToClientEvent() -> NGitLab.Models.Event
NGitLab.Mock.EventCollection
NGitLab.Mock.EventCollection.EventCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.File
NGitLab.Mock.File.File(string path) -> void
NGitLab.Mock.File.Path.get -> string
NGitLab.Mock.GitLabClientMockExtensions
NGitLab.Mock.GitLabObject
NGitLab.Mock.GitLabObject.GitLabObject() -> void
NGitLab.Mock.GitLabObject.Parent.get -> NGitLab.Mock.GitLabObject
NGitLab.Mock.GitLabObject.Server.get -> NGitLab.Mock.GitLabServer
NGitLab.Mock.GitLabServer
NGitLab.Mock.GitLabServer.AllGroups.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.Group>
NGitLab.Mock.GitLabServer.AllProjects.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.Project>
NGitLab.Mock.GitLabServer.AllRunners.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.Runner>
NGitLab.Mock.GitLabServer.ClientOperation -> System.EventHandler
NGitLab.Mock.GitLabServer.CreateClient(NGitLab.Mock.User user) -> NGitLab.IGitLabClient
NGitLab.Mock.GitLabServer.DefaultBranchName.get -> string
NGitLab.Mock.GitLabServer.DefaultBranchName.set -> void
NGitLab.Mock.GitLabServer.DefaultForkVisibilityLevel.get -> NGitLab.Models.VisibilityLevel
NGitLab.Mock.GitLabServer.DefaultForkVisibilityLevel.set -> void
NGitLab.Mock.GitLabServer.DefaultGraphQLClient.get -> NGitLab.IGraphQLClient
NGitLab.Mock.GitLabServer.DefaultGraphQLClient.set -> void
NGitLab.Mock.GitLabServer.Dispose() -> void
NGitLab.Mock.GitLabServer.Events.get -> NGitLab.Mock.EventCollection
NGitLab.Mock.GitLabServer.GitLabServer() -> void
NGitLab.Mock.GitLabServer.Groups.get -> NGitLab.Mock.GroupCollection
NGitLab.Mock.GitLabServer.ResourceLabelEvents.get -> NGitLab.Mock.ResourceLabelEventCollection
NGitLab.Mock.GitLabServer.ResourceMilestoneEvents.get -> NGitLab.Mock.ResourceMilestoneEventCollection
NGitLab.Mock.GitLabServer.ResourceStateEvents.get -> NGitLab.Mock.ResourceStateEventCollection
NGitLab.Mock.GitLabServer.SystemHooks.get -> NGitLab.Mock.SystemHookCollection
NGitLab.Mock.GitLabServer.Url.get -> System.Uri
NGitLab.Mock.GitLabServer.Url.set -> void
NGitLab.Mock.GitLabServer.Users.get -> NGitLab.Mock.UserCollection
NGitLab.Mock.GitLabServer.Version.get -> NGitLab.Models.GitLabVersion
NGitLab.Mock.GitLabServer.Version.set -> void
NGitLab.Mock.Group
NGitLab.Mock.Group.AddRunner(string description, long id = 0, string name = "gitlab-runner", bool paused = false, bool locked = true, bool isShared = false, bool runUntagged = false, string[] tagList = null) -> NGitLab.Mock.Runner
NGitLab.Mock.Group.AllProjects.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.Project>
NGitLab.Mock.Group.Badges.get -> NGitLab.Mock.BadgeCollection
NGitLab.Mock.Group.CanUserAddGroup(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.CanUserAddProject(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.CanUserDeleteGroup(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.CanUserEditGroup(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.CanUserViewGroup(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.CreateBotUser(NGitLab.Models.AccessLevel accessLevel) -> NGitLab.Mock.User
NGitLab.Mock.Group.CreatedAt.get -> System.DateTime
NGitLab.Mock.Group.CreatedAt.set -> void
NGitLab.Mock.Group.DescendantGroups.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.Group>
NGitLab.Mock.Group.Description.get -> string
NGitLab.Mock.Group.Description.set -> void
NGitLab.Mock.Group.ExtraSharedRunnersLimit.get -> System.TimeSpan
NGitLab.Mock.Group.ExtraSharedRunnersLimit.set -> void
NGitLab.Mock.Group.FullName.get -> string
NGitLab.Mock.Group.GetEffectivePermissions() -> NGitLab.Mock.EffectivePermissions
NGitLab.Mock.Group.GetEffectivePermissions(bool includeInheritedPermissions) -> NGitLab.Mock.EffectivePermissions
NGitLab.Mock.Group.Group() -> void
NGitLab.Mock.Group.Group(NGitLab.Mock.User user) -> void
NGitLab.Mock.Group.Group(string name) -> void
NGitLab.Mock.Group.Groups.get -> NGitLab.Mock.GroupCollection
NGitLab.Mock.Group.Hooks.get -> NGitLab.Mock.GroupHookCollection
NGitLab.Mock.Group.Id.get -> long
NGitLab.Mock.Group.Id.set -> void
NGitLab.Mock.Group.IsUserNamespace.get -> bool
NGitLab.Mock.Group.IsUserOwner(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Group.Labels.get -> NGitLab.Mock.LabelsCollection
NGitLab.Mock.Group.LfsEnabled.get -> bool
NGitLab.Mock.Group.LfsEnabled.set -> void
NGitLab.Mock.Group.MergeRequests.get -> System.Collections.Generic.IEnumerable<NGitLab.Mock.MergeRequest>
NGitLab.Mock.Group.Milestones.get -> NGitLab.Mock.MilestoneCollection
NGitLab.Mock.Group.Name.get -> string
NGitLab.Mock.Group.Name.set -> void
NGitLab.Mock.Group.Parent.get -> NGitLab.Mock.Group
NGitLab.Mock.Group.Path.get -> string
NGitLab.Mock.Group.Path.set -> void
NGitLab.Mock.Group.PathWithNameSpace.get -> string
NGitLab.Mock.Group.Permissions.get -> NGitLab.Mock.PermissionCollection
NGitLab.Mock.Group.Projects.get -> NGitLab.Mock.ProjectCollection
NGitLab.Mock.Group.RegisteredRunners.get -> NGitLab.Mock.RunnerCollection
NGitLab.Mock.Group.RemoveRunner(long runnerId) -> bool
NGitLab.Mock.Group.RequestAccessEnabled.get -> bool
NGitLab.Mock.Group.RequestAccessEnabled.set -> void
NGitLab.Mock.Group.RunnersToken.get -> string
NGitLab.Mock.Group.SharedRunnersLimit.get -> System.TimeSpan
NGitLab.Mock.Group.SharedRunnersLimit.set -> void
NGitLab.Mock.Group.ToClientGroup(NGitLab.Mock.User currentUser) -> NGitLab.Models.Group
NGitLab.Mock.Group.Visibility.get -> NGitLab.Models.VisibilityLevel
NGitLab.Mock.Group.Visibility.set -> void
NGitLab.Mock.GroupCollection
NGitLab.Mock.GroupCollection.GroupCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.GroupExtensions
NGitLab.Mock.GroupHook
NGitLab.Mock.GroupHook.CreatedAt.get -> System.DateTime
NGitLab.Mock.GroupHook.CreatedAt.set -> void
NGitLab.Mock.GroupHook.EnableSslVerification.get -> bool
NGitLab.Mock.GroupHook.EnableSslVerification.set -> void
NGitLab.Mock.GroupHook.GroupHook() -> void
NGitLab.Mock.GroupHook.Id.get -> long
NGitLab.Mock.GroupHook.IssuesEvents.get -> bool
NGitLab.Mock.GroupHook.IssuesEvents.set -> void
NGitLab.Mock.GroupHook.JobEvents.get -> bool
NGitLab.Mock.GroupHook.JobEvents.set -> void
NGitLab.Mock.GroupHook.MergeRequestsEvents.get -> bool
NGitLab.Mock.GroupHook.MergeRequestsEvents.set -> void
NGitLab.Mock.GroupHook.NoteEvents.get -> bool
NGitLab.Mock.GroupHook.NoteEvents.set -> void
NGitLab.Mock.GroupHook.Parent.get -> NGitLab.Mock.Group
NGitLab.Mock.GroupHook.PipelineEvents.get -> bool
NGitLab.Mock.GroupHook.PipelineEvents.set -> void
NGitLab.Mock.GroupHook.PushEvents.get -> bool
NGitLab.Mock.GroupHook.PushEvents.set -> void
NGitLab.Mock.GroupHook.TagPushEvents.get -> bool
NGitLab.Mock.GroupHook.TagPushEvents.set -> void
NGitLab.Mock.GroupHook.ToClientGroupHook() -> NGitLab.Models.GroupHook
NGitLab.Mock.GroupHook.Token.get -> string
NGitLab.Mock.GroupHook.Token.set -> void
NGitLab.Mock.GroupHook.Url.get -> System.Uri
NGitLab.Mock.GroupHook.Url.set -> void
NGitLab.Mock.GroupHook.WikiPagesEvents.get -> bool
NGitLab.Mock.GroupHook.WikiPagesEvents.set -> void
NGitLab.Mock.GroupHookCollection
NGitLab.Mock.GroupHookCollection.GroupHookCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.Issue
NGitLab.Mock.Issue.Assignee.get -> NGitLab.Mock.UserRef
NGitLab.Mock.Issue.Assignee.set -> void
NGitLab.Mock.Issue.Assignees.get -> NGitLab.Mock.UserRef[]
NGitLab.Mock.Issue.Assignees.set -> void
NGitLab.Mock.Issue.Author.get -> NGitLab.Mock.UserRef
NGitLab.Mock.Issue.Author.set -> void
NGitLab.Mock.Issue.CanUserViewIssue(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Issue.ClosedAt.get -> System.DateTimeOffset?
NGitLab.Mock.Issue.ClosedAt.set -> void
NGitLab.Mock.Issue.Confidential.get -> bool
NGitLab.Mock.Issue.Confidential.set -> void
NGitLab.Mock.Issue.CreatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Issue.CreatedAt.set -> void
NGitLab.Mock.Issue.Description.get -> string
NGitLab.Mock.Issue.Description.set -> void
NGitLab.Mock.Issue.DiscussionLocked.get -> bool
NGitLab.Mock.Issue.DiscussionLocked.set -> void
NGitLab.Mock.Issue.Id.get -> long
NGitLab.Mock.Issue.Id.set -> void
NGitLab.Mock.Issue.Iid.get -> long
NGitLab.Mock.Issue.Iid.set -> void
NGitLab.Mock.Issue.Issue() -> void
NGitLab.Mock.Issue.Labels.get -> string[]
NGitLab.Mock.Issue.Labels.set -> void
NGitLab.Mock.Issue.Milestone.get -> NGitLab.Mock.Milestone
NGitLab.Mock.Issue.Milestone.set -> void
NGitLab.Mock.Issue.Notes.get -> System.Collections.Generic.IList<NGitLab.Mock.ProjectIssueNote>
NGitLab.Mock.Issue.Notes.set -> void
NGitLab.Mock.Issue.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Issue.ProjectId.get -> long
NGitLab.Mock.Issue.State.get -> NGitLab.Mock.IssueState
NGitLab.Mock.Issue.State.set -> void
NGitLab.Mock.Issue.Title.get -> string
NGitLab.Mock.Issue.Title.set -> void
NGitLab.Mock.Issue.ToClientIssue() -> NGitLab.Models.Issue
NGitLab.Mock.Issue.UpdatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Issue.UpdatedAt.set -> void
NGitLab.Mock.Issue.WebUrl.get -> string
NGitLab.Mock.IssueCollection
NGitLab.Mock.IssueCollection.GetByIid(long issueId) -> NGitLab.Mock.Issue
NGitLab.Mock.IssueCollection.IssueCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.IssueState
NGitLab.Mock.IssueState.closed = 1 -> NGitLab.Mock.IssueState
NGitLab.Mock.IssueState.opened = 0 -> NGitLab.Mock.IssueState
NGitLab.Mock.Job
NGitLab.Mock.Job.AllowFailure.get -> bool
NGitLab.Mock.Job.AllowFailure.set -> void
NGitLab.Mock.Job.Artifacts.get -> NGitLab.Models.Job.JobArtifact
NGitLab.Mock.Job.Artifacts.set -> void
NGitLab.Mock.Job.Commit.get -> NGitLab.Models.Commit
NGitLab.Mock.Job.Commit.set -> void
NGitLab.Mock.Job.Coverage.get -> double?
NGitLab.Mock.Job.Coverage.set -> void
NGitLab.Mock.Job.CreatedAt.get -> System.DateTime
NGitLab.Mock.Job.CreatedAt.set -> void
NGitLab.Mock.Job.DownstreamPipeline.get -> NGitLab.Mock.Pipeline
NGitLab.Mock.Job.DownstreamPipeline.set -> void
NGitLab.Mock.Job.Duration.get -> float?
NGitLab.Mock.Job.Duration.set -> void
NGitLab.Mock.Job.FailureReason.get -> string
NGitLab.Mock.Job.FailureReason.set -> void
NGitLab.Mock.Job.FinishedAt.get -> System.DateTime
NGitLab.Mock.Job.FinishedAt.set -> void
NGitLab.Mock.Job.Id.get -> long
NGitLab.Mock.Job.Id.set -> void
NGitLab.Mock.Job.Job() -> void
NGitLab.Mock.Job.JobToken.get -> string
NGitLab.Mock.Job.JobToken.set -> void
NGitLab.Mock.Job.Name.get -> string
NGitLab.Mock.Job.Name.set -> void
NGitLab.Mock.Job.Pipeline.get -> NGitLab.Mock.Pipeline
NGitLab.Mock.Job.Pipeline.set -> void
NGitLab.Mock.Job.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Job.QueuedDuration.get -> float?
NGitLab.Mock.Job.QueuedDuration.set -> void
NGitLab.Mock.Job.Ref.get -> string
NGitLab.Mock.Job.Ref.set -> void
NGitLab.Mock.Job.Runner.get -> NGitLab.Models.Job.JobRunner
NGitLab.Mock.Job.Runner.set -> void
NGitLab.Mock.Job.Stage.get -> string
NGitLab.Mock.Job.Stage.set -> void
NGitLab.Mock.Job.StartedAt.get -> System.DateTime
NGitLab.Mock.Job.StartedAt.set -> void
NGitLab.Mock.Job.Status.get -> NGitLab.JobStatus
NGitLab.Mock.Job.Status.set -> void
NGitLab.Mock.Job.Tag.get -> bool
NGitLab.Mock.Job.Tag.set -> void
NGitLab.Mock.Job.TagList.get -> string[]
NGitLab.Mock.Job.TagList.set -> void
NGitLab.Mock.Job.Trace.get -> string
NGitLab.Mock.Job.Trace.set -> void
NGitLab.Mock.Job.User.get -> NGitLab.Mock.User
NGitLab.Mock.Job.User.set -> void
NGitLab.Mock.Job.WebUrl.get -> string
NGitLab.Mock.JobCollection
NGitLab.Mock.JobCollection.Add(NGitLab.Mock.Job job, NGitLab.Mock.Pipeline pipeline) -> NGitLab.Mock.Job
NGitLab.Mock.JobCollection.AddNew() -> NGitLab.Mock.Job
NGitLab.Mock.JobCollection.AddNew(NGitLab.Mock.Pipeline pipeline) -> NGitLab.Mock.Job
NGitLab.Mock.JobCollection.GetById(long id) -> NGitLab.Mock.Job
NGitLab.Mock.JobCollection.JobCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.Label
NGitLab.Mock.Label.Color.get -> string
NGitLab.Mock.Label.Color.set -> void
NGitLab.Mock.Label.Description.get -> string
NGitLab.Mock.Label.Description.set -> void
NGitLab.Mock.Label.Group.get -> NGitLab.Mock.Group
NGitLab.Mock.Label.Id.get -> long
NGitLab.Mock.Label.Id.set -> void
NGitLab.Mock.Label.Label() -> void
NGitLab.Mock.Label.Name.get -> string
NGitLab.Mock.Label.Name.set -> void
NGitLab.Mock.Label.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Label.ToClientLabel() -> NGitLab.Models.Label
NGitLab.Mock.LabelsCollection
NGitLab.Mock.LabelsCollection.Add(string name = null, string color = null, string description = null) -> NGitLab.Mock.Label
NGitLab.Mock.LabelsCollection.GetById(long id) -> NGitLab.Mock.Label
NGitLab.Mock.LabelsCollection.GetByName(string name) -> NGitLab.Mock.Label
NGitLab.Mock.LabelsCollection.LabelsCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.LintCI
NGitLab.Mock.LintCI.Errors.get -> string[]
NGitLab.Mock.LintCI.LintCI(string ref, bool valid, params string[] errors) -> void
NGitLab.Mock.LintCI.Ref.get -> string
NGitLab.Mock.LintCI.Valid.get -> bool
NGitLab.Mock.LintCICollection
NGitLab.Mock.LintCICollection.LintCICollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.MergeRequest
NGitLab.Mock.MergeRequest.Accept(NGitLab.Mock.User user) -> void
NGitLab.Mock.MergeRequest.Approvers.get -> System.Collections.Generic.IList<NGitLab.Mock.UserRef>
NGitLab.Mock.MergeRequest.Assignee.get -> NGitLab.Mock.UserRef
NGitLab.Mock.MergeRequest.Assignee.set -> void
NGitLab.Mock.MergeRequest.Assignees.get -> System.Collections.Generic.IList<NGitLab.Mock.UserRef>
NGitLab.Mock.MergeRequest.Assignees.set -> void
NGitLab.Mock.MergeRequest.Author.get -> NGitLab.Mock.UserRef
NGitLab.Mock.MergeRequest.Author.set -> void
NGitLab.Mock.MergeRequest.BaseSha.get -> string
NGitLab.Mock.MergeRequest.Changes.get -> NGitLab.Mock.MergeRequestChangeCollection
NGitLab.Mock.MergeRequest.ClosedAt.get -> System.DateTimeOffset?
NGitLab.Mock.MergeRequest.ClosedAt.set -> void
NGitLab.Mock.MergeRequest.Comments.get -> NGitLab.Mock.NoteCollection<NGitLab.Mock.MergeRequestComment>
NGitLab.Mock.MergeRequest.Commits.get -> System.Collections.Generic.IEnumerable<LibGit2Sharp.Commit>
NGitLab.Mock.MergeRequest.CreatedAt.get -> System.DateTimeOffset
NGitLab.Mock.MergeRequest.CreatedAt.set -> void
NGitLab.Mock.MergeRequest.Description.get -> string
NGitLab.Mock.MergeRequest.Description.set -> void
NGitLab.Mock.MergeRequest.DivergedCommitsCount.get -> int?
NGitLab.Mock.MergeRequest.Draft.get -> bool
NGitLab.Mock.MergeRequest.ForceRemoveSourceBranch.get -> bool
NGitLab.Mock.MergeRequest.ForceRemoveSourceBranch.set -> void
NGitLab.Mock.MergeRequest.GetDiscussions() -> System.Collections.Generic.IEnumerable<NGitLab.Models.MergeRequestDiscussion>
NGitLab.Mock.MergeRequest.HasConflicts.get -> bool
NGitLab.Mock.MergeRequest.HeadPipeline.get -> NGitLab.Mock.Pipeline
NGitLab.Mock.MergeRequest.HeadSha.get -> string
NGitLab.Mock.MergeRequest.Id.get -> long
NGitLab.Mock.MergeRequest.Iid.get -> long
NGitLab.Mock.MergeRequest.Labels.get -> System.Collections.Generic.IList<string>
NGitLab.Mock.MergeRequest.MergeCommitSha.get -> NGitLab.Sha1?
NGitLab.Mock.MergeRequest.MergeCommitSha.set -> void
NGitLab.Mock.MergeRequest.MergedAt.get -> System.DateTimeOffset?
NGitLab.Mock.MergeRequest.MergedAt.set -> void
NGitLab.Mock.MergeRequest.MergeRequest() -> void
NGitLab.Mock.MergeRequest.MergeWhenPipelineSucceeds.get -> bool
NGitLab.Mock.MergeRequest.MergeWhenPipelineSucceeds.set -> void
NGitLab.Mock.MergeRequest.Milestone.get -> NGitLab.Mock.Milestone
NGitLab.Mock.MergeRequest.Milestone.set -> void
NGitLab.Mock.MergeRequest.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.MergeRequest.Rebase(NGitLab.Mock.User user) -> NGitLab.Models.RebaseResult
NGitLab.Mock.MergeRequest.RebaseInProgress.get -> bool
NGitLab.Mock.MergeRequest.RebaseInProgress.set -> void
NGitLab.Mock.MergeRequest.Reviewers.get -> System.Collections.Generic.IList<NGitLab.Mock.UserRef>
NGitLab.Mock.MergeRequest.Reviewers.set -> void
NGitLab.Mock.MergeRequest.Sha.get -> NGitLab.Sha1
NGitLab.Mock.MergeRequest.ShouldRemoveSourceBranch.get -> bool
NGitLab.Mock.MergeRequest.ShouldRemoveSourceBranch.set -> void
NGitLab.Mock.MergeRequest.SourceBranch.get -> string
NGitLab.Mock.MergeRequest.SourceBranch.set -> void
NGitLab.Mock.MergeRequest.SourceProject.get -> NGitLab.Mock.Project
NGitLab.Mock.MergeRequest.SourceProject.set -> void
NGitLab.Mock.MergeRequest.Squash.get -> bool
NGitLab.Mock.MergeRequest.Squash.set -> void
NGitLab.Mock.MergeRequest.StartSha.get -> string
NGitLab.Mock.MergeRequest.State.get -> NGitLab.Models.MergeRequestState
NGitLab.Mock.MergeRequest.TargetBranch.get -> string
NGitLab.Mock.MergeRequest.TargetBranch.set -> void
NGitLab.Mock.MergeRequest.Title.get -> string
NGitLab.Mock.MergeRequest.Title.set -> void
NGitLab.Mock.MergeRequest.UpdatedAt.get -> System.DateTimeOffset
NGitLab.Mock.MergeRequest.UpdatedAt.set -> void
NGitLab.Mock.MergeRequest.WebUrl.get -> string
NGitLab.Mock.MergeRequest.WorkInProgress.get -> bool
NGitLab.Mock.MergeRequestChangeCollection
NGitLab.Mock.MergeRequestChangeCollection.Add(string diff) -> NGitLab.Mock.Change
NGitLab.Mock.MergeRequestChangeCollection.Add(string diff, string oldPath, string newPath, LibGit2Sharp.ChangeKind? changeKind) -> NGitLab.Mock.Change
NGitLab.Mock.MergeRequestChangeCollection.MergeRequestChangeCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.MergeRequestCollection
NGitLab.Mock.MergeRequestCollection.Add(NGitLab.Mock.Project sourceProject, string sourceBranch, string targetBranch, string title, NGitLab.Mock.User user) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.MergeRequestCollection.Add(string sourceBranch, string targetBranch, string title, NGitLab.Mock.User user) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.MergeRequestCollection.AddNew(NGitLab.Mock.User author, string title = null, bool addCommit = false) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.MergeRequestCollection.GetByIid(long iid) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.MergeRequestCollection.MergeRequestCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.MergeRequestComment
NGitLab.Mock.MergeRequestComment.MergeRequestComment() -> void
NGitLab.Mock.MergeRequestComment.Parent.get -> NGitLab.Mock.MergeRequest
NGitLab.Mock.Milestone
NGitLab.Mock.Milestone.ClosedAt.get -> System.DateTimeOffset?
NGitLab.Mock.Milestone.ClosedAt.set -> void
NGitLab.Mock.Milestone.CreatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Milestone.Description.get -> string
NGitLab.Mock.Milestone.Description.set -> void
NGitLab.Mock.Milestone.DueDate.get -> System.DateTimeOffset
NGitLab.Mock.Milestone.DueDate.set -> void
NGitLab.Mock.Milestone.Group.get -> NGitLab.Mock.Group
NGitLab.Mock.Milestone.Id.get -> long
NGitLab.Mock.Milestone.Id.set -> void
NGitLab.Mock.Milestone.Iid.get -> long
NGitLab.Mock.Milestone.Iid.set -> void
NGitLab.Mock.Milestone.Milestone() -> void
NGitLab.Mock.Milestone.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Milestone.StartDate.get -> System.DateTimeOffset
NGitLab.Mock.Milestone.StartDate.set -> void
NGitLab.Mock.Milestone.State.get -> NGitLab.Mock.MilestoneState
NGitLab.Mock.Milestone.State.set -> void
NGitLab.Mock.Milestone.Title.get -> string
NGitLab.Mock.Milestone.Title.set -> void
NGitLab.Mock.Milestone.ToClientMilestone() -> NGitLab.Models.Milestone
NGitLab.Mock.Milestone.UpdatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Milestone.UpdatedAt.set -> void
NGitLab.Mock.MilestoneCollection
NGitLab.Mock.MilestoneCollection.GetByIid(long iid) -> NGitLab.Mock.Milestone
NGitLab.Mock.MilestoneCollection.MilestoneCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.MilestoneState
NGitLab.Mock.MilestoneState.active = 0 -> NGitLab.Mock.MilestoneState
NGitLab.Mock.MilestoneState.closed = 1 -> NGitLab.Mock.MilestoneState
NGitLab.Mock.NonTextFile
NGitLab.Mock.NonTextFile.NonTextFile(string path, byte[] content) -> void
NGitLab.Mock.Note
NGitLab.Mock.Note.Author.get -> NGitLab.Mock.UserRef
NGitLab.Mock.Note.Author.set -> void
NGitLab.Mock.Note.Body.get -> string
NGitLab.Mock.Note.Body.set -> void
NGitLab.Mock.Note.Confidential.get -> bool
NGitLab.Mock.Note.Confidential.set -> void
NGitLab.Mock.Note.CreatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Note.CreatedAt.set -> void
NGitLab.Mock.Note.Id.get -> long
NGitLab.Mock.Note.Id.set -> void
NGitLab.Mock.Note.Note() -> void
NGitLab.Mock.Note.Resolvable.get -> bool
NGitLab.Mock.Note.Resolvable.set -> void
NGitLab.Mock.Note.Resolved.get -> bool
NGitLab.Mock.Note.Resolved.set -> void
NGitLab.Mock.Note.System.get -> bool
NGitLab.Mock.Note.System.set -> void
NGitLab.Mock.Note.ThreadId.get -> string
NGitLab.Mock.Note.ThreadId.set -> void
NGitLab.Mock.Note.ToClientEvent() -> NGitLab.Models.Note
NGitLab.Mock.Note.UpdatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Note.UpdatedAt.set -> void
NGitLab.Mock.NoteCollection<T>
NGitLab.Mock.NoteCollection<T>.GetById(long id) -> T
NGitLab.Mock.NoteCollection<T>.NoteCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.ObjectNotAttachedException
NGitLab.Mock.ObjectNotAttachedException.ObjectNotAttachedException() -> void
NGitLab.Mock.Permission
NGitLab.Mock.Permission.AccessLevel.get -> NGitLab.Models.AccessLevel
NGitLab.Mock.Permission.Group.get -> NGitLab.Mock.Group
NGitLab.Mock.Permission.Permission(NGitLab.Mock.Group group, NGitLab.Models.AccessLevel accessLevel) -> void
NGitLab.Mock.Permission.Permission(NGitLab.Mock.User user, NGitLab.Models.AccessLevel accessLevel) -> void
NGitLab.Mock.Permission.User.get -> NGitLab.Mock.User
NGitLab.Mock.PermissionCollection
NGitLab.Mock.PermissionCollection.PermissionCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.Pipeline
NGitLab.Mock.Pipeline.AddJob(NGitLab.Mock.Job job) -> NGitLab.Mock.Job
NGitLab.Mock.Pipeline.AddJob(NGitLab.Mock.Project project, NGitLab.Mock.Job job) -> NGitLab.Mock.Job
NGitLab.Mock.Pipeline.AddNewJob(NGitLab.JobStatus status) -> NGitLab.Mock.Job
NGitLab.Mock.Pipeline.AddNewJob(NGitLab.Mock.Project project) -> NGitLab.Mock.Job
NGitLab.Mock.Pipeline.AddNewJob(string name, NGitLab.JobStatus status, NGitLab.Mock.User user = null) -> NGitLab.Mock.Job
NGitLab.Mock.Pipeline.BeforeSha.get -> NGitLab.Sha1
NGitLab.Mock.Pipeline.BeforeSha.set -> void
NGitLab.Mock.Pipeline.CiToken.get -> string
NGitLab.Mock.Pipeline.CiToken.set -> void
NGitLab.Mock.Pipeline.CommittedAt.get -> System.DateTimeOffset
NGitLab.Mock.Pipeline.CommittedAt.set -> void
NGitLab.Mock.Pipeline.Coverage.get -> double
NGitLab.Mock.Pipeline.Coverage.set -> void
NGitLab.Mock.Pipeline.CreatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Pipeline.CreatedAt.set -> void
NGitLab.Mock.Pipeline.Duration.get -> System.TimeSpan?
NGitLab.Mock.Pipeline.Duration.set -> void
NGitLab.Mock.Pipeline.FinishedAt.get -> System.DateTimeOffset?
NGitLab.Mock.Pipeline.FinishedAt.set -> void
NGitLab.Mock.Pipeline.Id.get -> long
NGitLab.Mock.Pipeline.Id.set -> void
NGitLab.Mock.Pipeline.Name.get -> string
NGitLab.Mock.Pipeline.Name.set -> void
NGitLab.Mock.Pipeline.Pipeline(string ref) -> void
NGitLab.Mock.Pipeline.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Pipeline.ProjectId.get -> long
NGitLab.Mock.Pipeline.Ref.get -> string
NGitLab.Mock.Pipeline.Ref.set -> void
NGitLab.Mock.Pipeline.Sha.get -> NGitLab.Sha1
NGitLab.Mock.Pipeline.Sha.set -> void
NGitLab.Mock.Pipeline.Source.get -> string
NGitLab.Mock.Pipeline.Source.set -> void
NGitLab.Mock.Pipeline.StartedAt.get -> System.DateTimeOffset?
NGitLab.Mock.Pipeline.StartedAt.set -> void
NGitLab.Mock.Pipeline.Status.get -> NGitLab.JobStatus
NGitLab.Mock.Pipeline.Status.set -> void
NGitLab.Mock.Pipeline.Tag.get -> bool
NGitLab.Mock.Pipeline.Tag.set -> void
NGitLab.Mock.Pipeline.TestReports.get -> NGitLab.Models.TestReport
NGitLab.Mock.Pipeline.TestReports.set -> void
NGitLab.Mock.Pipeline.TestReportsSummary.get -> NGitLab.Models.TestReportSummary
NGitLab.Mock.Pipeline.TestReportsSummary.set -> void
NGitLab.Mock.Pipeline.UpdatedAt.get -> System.DateTimeOffset
NGitLab.Mock.Pipeline.UpdatedAt.set -> void
NGitLab.Mock.Pipeline.User.get -> NGitLab.Mock.User
NGitLab.Mock.Pipeline.User.set -> void
NGitLab.Mock.Pipeline.Variables.get -> System.Collections.Generic.IEnumerable<NGitLab.Models.PipelineVariable>
NGitLab.Mock.Pipeline.Variables.set -> void
NGitLab.Mock.Pipeline.YamlError.get -> string
NGitLab.Mock.Pipeline.YamlError.set -> void
NGitLab.Mock.PipelineCollection
NGitLab.Mock.PipelineCollection.Add(string ref, NGitLab.JobStatus status, NGitLab.Mock.User user) -> NGitLab.Mock.Pipeline
NGitLab.Mock.PipelineCollection.GetById(long id) -> NGitLab.Mock.Pipeline
NGitLab.Mock.PipelineCollection.PipelineCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.PipelineSchedule
NGitLab.Mock.PipelineSchedule.Active.get -> bool
NGitLab.Mock.PipelineSchedule.Active.set -> void
NGitLab.Mock.PipelineSchedule.AddNewPipeline() -> NGitLab.Mock.Pipeline
NGitLab.Mock.PipelineSchedule.CreatedAt.get -> System.DateTime
NGitLab.Mock.PipelineSchedule.CreatedAt.set -> void
NGitLab.Mock.PipelineSchedule.Cron.get -> string
NGitLab.Mock.PipelineSchedule.Cron.set -> void
NGitLab.Mock.PipelineSchedule.Description.get -> string
NGitLab.Mock.PipelineSchedule.Description.set -> void
NGitLab.Mock.PipelineSchedule.Id.get -> long
NGitLab.Mock.PipelineSchedule.Id.set -> void
NGitLab.Mock.PipelineSchedule.NextRunAt.get -> System.DateTime
NGitLab.Mock.PipelineSchedule.NextRunAt.set -> void
NGitLab.Mock.PipelineSchedule.Owner.get -> NGitLab.Mock.User
NGitLab.Mock.PipelineSchedule.Owner.set -> void
NGitLab.Mock.PipelineSchedule.PipelineSchedule() -> void
NGitLab.Mock.PipelineSchedule.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.PipelineSchedule.Ref.get -> string
NGitLab.Mock.PipelineSchedule.Ref.set -> void
NGitLab.Mock.PipelineSchedule.ToPipelineScheduleBasicClient() -> NGitLab.Models.PipelineScheduleBasic
NGitLab.Mock.PipelineSchedule.ToPipelineScheduleClient() -> NGitLab.Models.PipelineSchedule
NGitLab.Mock.PipelineSchedule.UpdatedAt.get -> System.DateTime
NGitLab.Mock.PipelineSchedule.UpdatedAt.set -> void
NGitLab.Mock.PipelineSchedule.Variables.get -> System.Collections.Generic.IDictionary<string, string>
NGitLab.Mock.PipelineSchedule.Variables.set -> void
NGitLab.Mock.PipelineScheduleCollection
NGitLab.Mock.PipelineScheduleCollection.GetById(long id) -> NGitLab.Mock.PipelineSchedule
NGitLab.Mock.PipelineScheduleCollection.PipelineScheduleCollection(NGitLab.Mock.Project project) -> void
NGitLab.Mock.Project
NGitLab.Mock.Project.AccessibleMergeRequests.get -> bool
NGitLab.Mock.Project.AccessibleMergeRequests.set -> void
NGitLab.Mock.Project.AddRunner(string name, string description, bool paused, bool locked, bool isShared) -> NGitLab.Mock.Runner
NGitLab.Mock.Project.AddRunner(string name, string description, bool paused, bool locked, bool isShared, bool runUntagged) -> NGitLab.Mock.Runner
NGitLab.Mock.Project.AddRunner(string name, string description, bool paused, bool locked, bool isShared, bool runUntagged, long id) -> NGitLab.Mock.Runner
NGitLab.Mock.Project.AllThreadsMustBeResolvedToMerge.get -> bool
NGitLab.Mock.Project.AllThreadsMustBeResolvedToMerge.set -> void
NGitLab.Mock.Project.ApprovalsBeforeMerge.get -> int
NGitLab.Mock.Project.ApprovalsBeforeMerge.set -> void
NGitLab.Mock.Project.Archived.get -> bool
NGitLab.Mock.Project.Archived.set -> void
NGitLab.Mock.Project.Badges.get -> NGitLab.Mock.BadgeCollection
NGitLab.Mock.Project.BuildTimeout.get -> System.TimeSpan
NGitLab.Mock.Project.BuildTimeout.set -> void
NGitLab.Mock.Project.CanUserContributeToProject(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.CanUserDeleteProject(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.CanUserEditProject(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.CanUserViewConfidentialIssues(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.CanUserViewProject(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.CommitInfos.get -> NGitLab.Mock.CommitInfoCollection
NGitLab.Mock.Project.CommitStatuses.get -> NGitLab.Mock.CommitStatusCollection
NGitLab.Mock.Project.CreateBotUser(string tokenName, NGitLab.Models.AccessLevel accessLevel) -> NGitLab.Mock.User
NGitLab.Mock.Project.CreateMergeRequest(NGitLab.Mock.User user, string title, string description, string targetBranchName, string sourceBranchName, NGitLab.Mock.Project sourceProject = null) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.Project.CreateNewMergeRequest(NGitLab.Mock.User user, string branchName, string targetBranch, string title, string description) -> NGitLab.Mock.MergeRequest
NGitLab.Mock.Project.DefaultBranch.get -> string
NGitLab.Mock.Project.DefaultBranch.set -> void
NGitLab.Mock.Project.Description.get -> string
NGitLab.Mock.Project.Description.set -> void
NGitLab.Mock.Project.EnabledRunners.get -> NGitLab.Mock.RunnerRefCollection
NGitLab.Mock.Project.Fork(NGitLab.Mock.Group group, NGitLab.Mock.User user, string projectName) -> NGitLab.Mock.Project
NGitLab.Mock.Project.Fork(NGitLab.Mock.User user) -> NGitLab.Mock.Project
NGitLab.Mock.Project.ForkedFrom.get -> NGitLab.Mock.Project
NGitLab.Mock.Project.ForkingAccessLevel.get -> NGitLab.Models.RepositoryAccessLevel
NGitLab.Mock.Project.ForkingAccessLevel.set -> void
NGitLab.Mock.Project.FullName.get -> string
NGitLab.Mock.Project.GetEffectivePermissions() -> NGitLab.Mock.EffectivePermissions
NGitLab.Mock.Project.GetEffectivePermissions(bool includeInheritedPermissions) -> NGitLab.Mock.EffectivePermissions
NGitLab.Mock.Project.Group.get -> NGitLab.Mock.Group
NGitLab.Mock.Project.GroupRunnersEnabled.get -> bool
NGitLab.Mock.Project.GroupRunnersEnabled.set -> void
NGitLab.Mock.Project.Hooks.get -> NGitLab.Mock.ProjectHookCollection
NGitLab.Mock.Project.HttpUrl.get -> string
NGitLab.Mock.Project.Id.get -> long
NGitLab.Mock.Project.Id.set -> void
NGitLab.Mock.Project.ImportStatus.get -> string
NGitLab.Mock.Project.ImportStatus.set -> void
NGitLab.Mock.Project.Issues.get -> NGitLab.Mock.IssueCollection
NGitLab.Mock.Project.IsUserMember(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.IsUserOwner(NGitLab.Mock.User user) -> bool
NGitLab.Mock.Project.Jobs.get -> NGitLab.Mock.JobCollection
NGitLab.Mock.Project.Labels.get -> NGitLab.Mock.LabelsCollection
NGitLab.Mock.Project.LfsEnabled.get -> bool
NGitLab.Mock.Project.LfsEnabled.set -> void
NGitLab.Mock.Project.LintCIs.get -> NGitLab.Mock.LintCICollection
NGitLab.Mock.Project.MergeMethod.get -> string
NGitLab.Mock.Project.MergeMethod.set -> void
NGitLab.Mock.Project.MergeRequests.get -> NGitLab.Mock.MergeRequestCollection
NGitLab.Mock.Project.Milestones.get -> NGitLab.Mock.MilestoneCollection
NGitLab.Mock.Project.Mirror.get -> bool
NGitLab.Mock.Project.Mirror.set -> void
NGitLab.Mock.Project.MirrorOverwritesDivergedBranches.get -> bool
NGitLab.Mock.Project.MirrorOverwritesDivergedBranches.set -> void
NGitLab.Mock.Project.MirrorTriggerBuilds.get -> bool
NGitLab.Mock.Project.MirrorTriggerBuilds.set -> void
NGitLab.Mock.Project.MirrorUserId.get -> long
NGitLab.Mock.Project.MirrorUserId.set -> void
NGitLab.Mock.Project.Name.get -> string
NGitLab.Mock.Project.Name.set -> void
NGitLab.Mock.Project.OnlyMirrorProtectedBranch.get -> bool
NGitLab.Mock.Project.OnlyMirrorProtectedBranch.set -> void
NGitLab.Mock.Project.Path.get -> string
NGitLab.Mock.Project.PathWithNamespace.get -> string
NGitLab.Mock.Project.Permissions.get -> NGitLab.Mock.PermissionCollection
NGitLab.Mock.Project.Pipelines.get -> NGitLab.Mock.PipelineCollection
NGitLab.Mock.Project.PipelineSchedules.get -> NGitLab.Mock.PipelineScheduleCollection
NGitLab.Mock.Project.Project() -> void
NGitLab.Mock.Project.Project(string name) -> void
NGitLab.Mock.Project.Project(string name, string path) -> void
NGitLab.Mock.Project.ProtectedBranches.get -> NGitLab.Mock.ProtectedBranchCollection
NGitLab.Mock.Project.RegisteredRunners.get -> NGitLab.Mock.RunnerCollection
NGitLab.Mock.Project.Releases.get -> NGitLab.Mock.ReleaseCollection
NGitLab.Mock.Project.Remove() -> void
NGitLab.Mock.Project.RemoveRunner(long runnerId) -> bool
NGitLab.Mock.Project.Repository.get -> NGitLab.Mock.Repository
NGitLab.Mock.Project.RepositoryAccessLevel.get -> NGitLab.Models.RepositoryAccessLevel
NGitLab.Mock.Project.RepositoryAccessLevel.set -> void
NGitLab.Mock.Project.RunnersToken.get -> string
NGitLab.Mock.Project.SshUrl.get -> string
NGitLab.Mock.Project.Statistics.get -> NGitLab.Models.ProjectStatistics
NGitLab.Mock.Project.Statistics.set -> void
NGitLab.Mock.Project.Tags.get -> string[]
NGitLab.Mock.Project.Tags.set -> void
NGitLab.Mock.Project.ToClientProject(NGitLab.Mock.User currentUser) -> NGitLab.Models.Project
NGitLab.Mock.Project.Topics.get -> string[]
NGitLab.Mock.Project.Topics.set -> void
NGitLab.Mock.Project.Visibility.get -> NGitLab.Models.VisibilityLevel
NGitLab.Mock.Project.Visibility.set -> void
NGitLab.Mock.Project.WebUrl.get -> string
NGitLab.Mock.ProjectCollection
NGitLab.Mock.ProjectCollection.AddNew() -> NGitLab.Mock.Project
NGitLab.Mock.ProjectCollection.AddNew(System.Action<NGitLab.Mock.Project> configure) -> NGitLab.Mock.Project
NGitLab.Mock.ProjectCollection.ProjectCollection(NGitLab.Mock.Group group) -> void
NGitLab.Mock.ProjectExtensions
NGitLab.Mock.ProjectHook
NGitLab.Mock.ProjectHook.CreatedAt.get -> System.DateTime
NGitLab.Mock.ProjectHook.CreatedAt.set -> void
NGitLab.Mock.ProjectHook.EnableSslVerification.get -> bool
NGitLab.Mock.ProjectHook.EnableSslVerification.set -> void
NGitLab.Mock.ProjectHook.Id.get -> long
NGitLab.Mock.ProjectHook.IssuesEvents.get -> bool
NGitLab.Mock.ProjectHook.IssuesEvents.set -> void
NGitLab.Mock.ProjectHook.JobEvents.get -> bool
NGitLab.Mock.ProjectHook.JobEvents.set -> void
NGitLab.Mock.ProjectHook.MergeRequestsEvents.get -> bool
NGitLab.Mock.ProjectHook.MergeRequestsEvents.set -> void
NGitLab.Mock.ProjectHook.NoteEvents.get -> bool
NGitLab.Mock.ProjectHook.NoteEvents.set -> void
NGitLab.Mock.ProjectHook.Parent.get -> NGitLab.Mock.Project
NGitLab.Mock.ProjectHook.PipelineEvents.get -> bool
NGitLab.Mock.ProjectHook.PipelineEvents.set -> void
NGitLab.Mock.ProjectHook.ProjectHook() -> void
NGitLab.Mock.ProjectHook.PushEvents.get -> bool
NGitLab.Mock.ProjectHook.PushEvents.set -> void
NGitLab.Mock.ProjectHook.TagPushEvents.get -> bool
NGitLab.Mock.ProjectHook.TagPushEvents.set -> void
NGitLab.Mock.ProjectHook.ToClientProjectHook() -> NGitLab.Models.ProjectHook
NGitLab.Mock.ProjectHook.Url.get -> System.Uri
NGitLab.Mock.ProjectHook.Url.set -> void
NGitLab.Mock.ProjectHook.WikiPagesEvents.get -> bool
NGitLab.Mock.ProjectHook.WikiPagesEvents.set -> void
NGitLab.Mock.ProjectHookCollection
NGitLab.Mock.ProjectHookCollection.ProjectHookCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.ProjectIssueNote
NGitLab.Mock.ProjectIssueNote.Parent.get -> NGitLab.Mock.Issue
NGitLab.Mock.ProjectIssueNote.ProjectIssueNote() -> void
NGitLab.Mock.ProtectedBranch
NGitLab.Mock.ProtectedBranch.AllowForcePush.get -> bool
NGitLab.Mock.ProtectedBranch.AllowForcePush.set -> void
NGitLab.Mock.ProtectedBranch.CodeOwnerApprovalRequired.get -> bool
NGitLab.Mock.ProtectedBranch.CodeOwnerApprovalRequired.set -> void
NGitLab.Mock.ProtectedBranch.Id.get -> long
NGitLab.Mock.ProtectedBranch.Id.set -> void
NGitLab.Mock.ProtectedBranch.MergeAccessLevels.get -> NGitLab.Models.AccessLevelInfo[]
NGitLab.Mock.ProtectedBranch.MergeAccessLevels.set -> void
NGitLab.Mock.ProtectedBranch.Name.get -> string
NGitLab.Mock.ProtectedBranch.Name.set -> void
NGitLab.Mock.ProtectedBranch.ProtectedBranch() -> void
NGitLab.Mock.ProtectedBranch.PushAccessLevels.get -> NGitLab.Models.AccessLevelInfo[]
NGitLab.Mock.ProtectedBranch.PushAccessLevels.set -> void
NGitLab.Mock.ProtectedBranchCollection
NGitLab.Mock.ProtectedBranchCollection.GetById(long branchId) -> NGitLab.Mock.ProtectedBranch
NGitLab.Mock.ProtectedBranchCollection.ProtectedBranchCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.ReleaseCollection
NGitLab.Mock.ReleaseCollection.Add(string tagName, string name, string description, NGitLab.Mock.User user) -> NGitLab.Mock.ReleaseInfo
NGitLab.Mock.ReleaseCollection.Add(string tagName, string name, string reference, string description, NGitLab.Mock.User user) -> NGitLab.Mock.ReleaseInfo
NGitLab.Mock.ReleaseCollection.GetByTagName(string tagName) -> NGitLab.Mock.ReleaseInfo
NGitLab.Mock.ReleaseCollection.ReleaseCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.ReleaseInfo
NGitLab.Mock.ReleaseInfo.Author.get -> NGitLab.Mock.UserRef
NGitLab.Mock.ReleaseInfo.Author.set -> void
NGitLab.Mock.ReleaseInfo.Commit.get -> NGitLab.Models.Commit
NGitLab.Mock.ReleaseInfo.Commit.set -> void
NGitLab.Mock.ReleaseInfo.CommitPath.get -> string
NGitLab.Mock.ReleaseInfo.CommitPath.set -> void
NGitLab.Mock.ReleaseInfo.CreatedAt.get -> System.DateTime
NGitLab.Mock.ReleaseInfo.CreatedAt.set -> void
NGitLab.Mock.ReleaseInfo.Description.get -> string
NGitLab.Mock.ReleaseInfo.Description.set -> void
NGitLab.Mock.ReleaseInfo.Name.get -> string
NGitLab.Mock.ReleaseInfo.Name.set -> void
NGitLab.Mock.ReleaseInfo.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.ReleaseInfo.ReleasedAt.get -> System.DateTime
NGitLab.Mock.ReleaseInfo.ReleasedAt.set -> void
NGitLab.Mock.ReleaseInfo.ReleaseInfo() -> void
NGitLab.Mock.ReleaseInfo.TagName.get -> string
NGitLab.Mock.ReleaseInfo.TagName.set -> void
NGitLab.Mock.ReleaseInfo.TagPath.get -> string
NGitLab.Mock.ReleaseInfo.TagPath.set -> void
NGitLab.Mock.ReleaseTag
NGitLab.Mock.ReleaseTag.Name.get -> string
NGitLab.Mock.ReleaseTag.ReleaseNotes.get -> string
NGitLab.Mock.ReleaseTag.ReleaseNotes.set -> void
NGitLab.Mock.ReleaseTag.ReleaseTag(string name, string releaseNotes) -> void
NGitLab.Mock.Repository
NGitLab.Mock.Repository.Checkout(string committishOrBranchNameSpec) -> void
NGitLab.Mock.Repository.CherryPick(NGitLab.Models.CommitCherryPick commitCherryPick) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Commit(NGitLab.Mock.User user, string message) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Commit(NGitLab.Mock.User user, string message, string targetBranch, System.Collections.Generic.IEnumerable<NGitLab.Mock.File> files) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Commit(NGitLab.Mock.User user, string message, string targetBranch, System.Collections.Generic.IEnumerable<NGitLab.Mock.File> files, System.Collections.Generic.IEnumerable<string> submodules) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Commit(NGitLab.Mock.User user, string message, System.Collections.Generic.IEnumerable<NGitLab.Mock.File> files) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Commit(NGitLab.Models.CommitCreate commitCreate) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.CreateAndCheckoutBranch(string branchName) -> LibGit2Sharp.Branch
NGitLab.Mock.Repository.CreateBranch(string branchName) -> LibGit2Sharp.Branch
NGitLab.Mock.Repository.CreateBranch(string branchName, string reference) -> LibGit2Sharp.Branch
NGitLab.Mock.Repository.CreateReleaseTag(string tagName, string releaseNotes) -> NGitLab.Mock.ReleaseTag
NGitLab.Mock.Repository.CreateTag(NGitLab.Mock.User user, string tagName, string reference, string message) -> LibGit2Sharp.Tag
NGitLab.Mock.Repository.CreateTag(NGitLab.Mock.User user, string tagName, string reference, string message, string releaseNotes) -> LibGit2Sharp.Tag
NGitLab.Mock.Repository.CreateTag(string tagName) -> LibGit2Sharp.Tag
NGitLab.Mock.Repository.CreateTag(string tagName, string reference) -> LibGit2Sharp.Tag
NGitLab.Mock.Repository.DeleteTag(string tagName) -> void
NGitLab.Mock.Repository.Dispose() -> void
NGitLab.Mock.Repository.FindMergeBase(LibGit2Sharp.Commit first, LibGit2Sharp.Commit second) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.FullPath.get -> string
NGitLab.Mock.Repository.GetAllBranches() -> System.Collections.Generic.IReadOnlyCollection<LibGit2Sharp.Branch>
NGitLab.Mock.Repository.GetBranch(string branchName) -> LibGit2Sharp.Branch
NGitLab.Mock.Repository.GetBranchCommits(string branchName) -> System.Collections.Generic.IEnumerable<LibGit2Sharp.Commit>
NGitLab.Mock.Repository.GetBranchFullPatch(string branchName) -> LibGit2Sharp.Patch
NGitLab.Mock.Repository.GetBranchTipCommit(string branchName) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.GetCommit(string reference) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.GetCommits() -> System.Collections.Generic.IEnumerable<LibGit2Sharp.Commit>
NGitLab.Mock.Repository.GetCommits(NGitLab.GetCommitsRequest request) -> System.Collections.Generic.IEnumerable<LibGit2Sharp.Commit>
NGitLab.Mock.Repository.GetCommits(string ref) -> System.Collections.Generic.IEnumerable<LibGit2Sharp.Commit>
NGitLab.Mock.Repository.GetFile(string filePath, string ref) -> NGitLab.Models.FileData
NGitLab.Mock.Repository.GetRawFileAsync(string filePath, System.Func<System.IO.Stream, System.Threading.Tasks.Task> parser, NGitLab.GetRawFileRequest request) -> System.Threading.Tasks.Task
NGitLab.Mock.Repository.GetReleaseTag(string tagName) -> NGitLab.Mock.ReleaseTag
NGitLab.Mock.Repository.GetTags() -> LibGit2Sharp.TagCollection
NGitLab.Mock.Repository.IsEmpty.get -> bool
NGitLab.Mock.Repository.IsRebaseNeeded(string branch, string ontoRebaseBranch) -> bool
NGitLab.Mock.Repository.Merge(NGitLab.Mock.User user, string sourceBranch, string targetBranch) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Merge(NGitLab.Mock.User user, string sourceBranch, string targetBranch, NGitLab.Mock.Project targetProject) -> LibGit2Sharp.Commit
NGitLab.Mock.Repository.Project.get -> NGitLab.Mock.Project
NGitLab.Mock.Repository.Rebase(NGitLab.Mock.UserRef user, string sourceBranch, string targetBranch) -> bool
NGitLab.Mock.Repository.RemoveBranch(string branchName) -> void
NGitLab.Mock.Repository.SetRepoConfig<T>(string name, T value) -> void
NGitLab.Mock.Repository.UpdateReleaseTag(string tagName, string releaseNotes) -> NGitLab.Mock.ReleaseTag
NGitLab.Mock.ResourceLabelEvent
NGitLab.Mock.ResourceLabelEvent.Action.get -> NGitLab.Models.ResourceLabelEventAction
NGitLab.Mock.ResourceLabelEvent.Action.set -> void
NGitLab.Mock.ResourceLabelEvent.CreatedAt.get -> System.DateTime
NGitLab.Mock.ResourceLabelEvent.CreatedAt.set -> void
NGitLab.Mock.ResourceLabelEvent.Id.get -> long
NGitLab.Mock.ResourceLabelEvent.Id.set -> void
NGitLab.Mock.ResourceLabelEvent.Label.get -> NGitLab.Mock.Label
NGitLab.Mock.ResourceLabelEvent.Label.set -> void
NGitLab.Mock.ResourceLabelEvent.ResourceId.get -> long
NGitLab.Mock.ResourceLabelEvent.ResourceId.set -> void
NGitLab.Mock.ResourceLabelEvent.ResourceLabelEvent() -> void
NGitLab.Mock.ResourceLabelEvent.ResourceType.get -> string
NGitLab.Mock.ResourceLabelEvent.ResourceType.set -> void
NGitLab.Mock.ResourceLabelEvent.ToClientResourceLabelEvent() -> NGitLab.Models.ResourceLabelEvent
NGitLab.Mock.ResourceLabelEvent.User.get -> NGitLab.Models.Author
NGitLab.Mock.ResourceLabelEvent.User.set -> void
NGitLab.Mock.ResourceLabelEventCollection
NGitLab.Mock.ResourceLabelEventCollection.ResourceLabelEventCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.ResourceMilestoneEvent
NGitLab.Mock.ResourceMilestoneEvent.Action.get -> NGitLab.Models.ResourceMilestoneEventAction
NGitLab.Mock.ResourceMilestoneEvent.Action.set -> void
NGitLab.Mock.ResourceMilestoneEvent.CreatedAt.get -> System.DateTime
NGitLab.Mock.ResourceMilestoneEvent.CreatedAt.set -> void
NGitLab.Mock.ResourceMilestoneEvent.Id.get -> long
NGitLab.Mock.ResourceMilestoneEvent.Id.set -> void
NGitLab.Mock.ResourceMilestoneEvent.Milestone.get -> NGitLab.Mock.Milestone
NGitLab.Mock.ResourceMilestoneEvent.Milestone.set -> void
NGitLab.Mock.ResourceMilestoneEvent.ResourceId.get -> long
NGitLab.Mock.ResourceMilestoneEvent.ResourceId.set -> void
NGitLab.Mock.ResourceMilestoneEvent.ResourceMilestoneEvent() -> void
NGitLab.Mock.ResourceMilestoneEvent.ResourceType.get -> string
NGitLab.Mock.ResourceMilestoneEvent.ResourceType.set -> void
NGitLab.Mock.ResourceMilestoneEvent.ToClientResourceMilestoneEvent() -> NGitLab.Models.ResourceMilestoneEvent
NGitLab.Mock.ResourceMilestoneEvent.User.get -> NGitLab.Models.Author
NGitLab.Mock.ResourceMilestoneEvent.User.set -> void
NGitLab.Mock.ResourceMilestoneEventCollection
NGitLab.Mock.ResourceMilestoneEventCollection.ResourceMilestoneEventCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.ResourceStateEvent
NGitLab.Mock.ResourceStateEvent.CreatedAt.get -> System.DateTime
NGitLab.Mock.ResourceStateEvent.CreatedAt.set -> void
NGitLab.Mock.ResourceStateEvent.Id.get -> long
NGitLab.Mock.ResourceStateEvent.Id.set -> void
NGitLab.Mock.ResourceStateEvent.ResourceId.get -> long
NGitLab.Mock.ResourceStateEvent.ResourceId.set -> void
NGitLab.Mock.ResourceStateEvent.ResourceStateEvent() -> void
NGitLab.Mock.ResourceStateEvent.ResourceType.get -> string
NGitLab.Mock.ResourceStateEvent.ResourceType.set -> void
NGitLab.Mock.ResourceStateEvent.State.get -> string
NGitLab.Mock.ResourceStateEvent.State.set -> void
NGitLab.Mock.ResourceStateEvent.ToClientResourceStateEvent() -> NGitLab.Models.ResourceStateEvent
NGitLab.Mock.ResourceStateEvent.User.get -> NGitLab.Models.Author
NGitLab.Mock.ResourceStateEvent.User.set -> void
NGitLab.Mock.ResourceStateEventCollection
NGitLab.Mock.ResourceStateEventCollection.ResourceStateEventCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.Runner
NGitLab.Mock.Runner.ContactedAt.get -> System.DateTime
NGitLab.Mock.Runner.ContactedAt.set -> void
NGitLab.Mock.Runner.Description.get -> string
NGitLab.Mock.Runner.Description.set -> void
NGitLab.Mock.Runner.Id.get -> long
NGitLab.Mock.Runner.Id.set -> void
NGitLab.Mock.Runner.IpAddress.get -> string
NGitLab.Mock.Runner.IpAddress.set -> void
NGitLab.Mock.Runner.IsShared.get -> bool
NGitLab.Mock.Runner.IsShared.set -> void
NGitLab.Mock.Runner.Locked.get -> bool
NGitLab.Mock.Runner.Locked.set -> void
NGitLab.Mock.Runner.Name.get -> string
NGitLab.Mock.Runner.Name.set -> void
NGitLab.Mock.Runner.Online.get -> bool?
NGitLab.Mock.Runner.Online.set -> void
NGitLab.Mock.Runner.Parent.get -> NGitLab.Mock.Project
NGitLab.Mock.Runner.Paused.get -> bool
NGitLab.Mock.Runner.Paused.set -> void
NGitLab.Mock.Runner.Runner() -> void
NGitLab.Mock.Runner.RunUntagged.get -> bool
NGitLab.Mock.Runner.RunUntagged.set -> void
NGitLab.Mock.Runner.Status.get -> string
NGitLab.Mock.Runner.Status.set -> void
NGitLab.Mock.Runner.TagList.get -> string[]
NGitLab.Mock.Runner.TagList.set -> void
NGitLab.Mock.Runner.Token.get -> string
NGitLab.Mock.Runner.Token.set -> void
NGitLab.Mock.Runner.Version.get -> string
NGitLab.Mock.Runner.Version.set -> void
NGitLab.Mock.RunnerCollection
NGitLab.Mock.RunnerCollection.Remove(long id) -> bool
NGitLab.Mock.RunnerCollection.RunnerCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.RunnerRef
NGitLab.Mock.RunnerRef.Id.get -> long
NGitLab.Mock.RunnerRef.RunnerRef(NGitLab.Mock.Runner runner) -> void
NGitLab.Mock.RunnerRefCollection
NGitLab.Mock.RunnerRefCollection.RunnerRefCollection(NGitLab.Mock.GitLabObject parent) -> void
NGitLab.Mock.StateEvent
NGitLab.Mock.StateEvent.close = 1 -> NGitLab.Mock.StateEvent
NGitLab.Mock.StateEvent.open = 0 -> NGitLab.Mock.StateEvent
NGitLab.Mock.StringExtensions
NGitLab.Mock.SystemHook
NGitLab.Mock.SystemHook.CreatedAt.get -> System.DateTime
NGitLab.Mock.SystemHook.CreatedAt.set -> void
NGitLab.Mock.SystemHook.EnableSslVerification.get -> bool
NGitLab.Mock.SystemHook.EnableSslVerification.set -> void
NGitLab.Mock.SystemHook.Id.get -> long
NGitLab.Mock.SystemHook.MergeRequestsEvents.get -> bool
NGitLab.Mock.SystemHook.MergeRequestsEvents.set -> void
NGitLab.Mock.SystemHook.PushEvents.get -> bool
NGitLab.Mock.SystemHook.PushEvents.set -> void
NGitLab.Mock.SystemHook.RepositoryUpdateEvents.get -> bool
NGitLab.Mock.SystemHook.RepositoryUpdateEvents.set -> void
NGitLab.Mock.SystemHook.SystemHook() -> void
NGitLab.Mock.SystemHook.TagPushEvents.get -> bool
NGitLab.Mock.SystemHook.TagPushEvents.set -> void
NGitLab.Mock.SystemHook.ToClientSystemHook() -> NGitLab.Models.SystemHook
NGitLab.Mock.SystemHook.Url.get -> System.Uri
NGitLab.Mock.SystemHook.Url.set -> void
NGitLab.Mock.SystemHookCollection
NGitLab.Mock.SystemHookCollection.SystemHookCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.TemporaryDirectory
NGitLab.Mock.TemporaryDirectory.CopyFolder(string sourcePath) -> void
NGitLab.Mock.TemporaryDirectory.Dispose() -> void
NGitLab.Mock.TemporaryDirectory.FullPath.get -> string
NGitLab.Mock.TemporaryDirectory.GetFullPath(string relativePath) -> string
NGitLab.Mock.TemporaryDirectory.KeepDirectory.get -> bool
NGitLab.Mock.TemporaryDirectory.KeepDirectory.set -> void
NGitLab.Mock.TemporaryDirectory.MakeReadOnly() -> void
NGitLab.Mock.TextFile
NGitLab.Mock.TextFile.Encoding.get -> System.Text.Encoding
NGitLab.Mock.TextFile.TextContent.get -> string
NGitLab.Mock.TextFile.TextFile(string path, string content) -> void
NGitLab.Mock.TextFile.TextFile(string path, string content, System.Text.Encoding encoding) -> void
NGitLab.Mock.User
NGitLab.Mock.User.AvatarUrl.get -> string
NGitLab.Mock.User.AvatarUrl.set -> void
NGitLab.Mock.User.Bot.get -> bool
NGitLab.Mock.User.CreatedAt.get -> System.DateTime
NGitLab.Mock.User.CreatedAt.set -> void
NGitLab.Mock.User.Email.get -> string
NGitLab.Mock.User.Email.set -> void
NGitLab.Mock.User.Id.get -> long
NGitLab.Mock.User.Id.set -> void
NGitLab.Mock.User.Identities.get -> NGitLab.Models.Identity[]
NGitLab.Mock.User.Identities.set -> void
NGitLab.Mock.User.IsAdmin.get -> bool
NGitLab.Mock.User.IsAdmin.set -> void
NGitLab.Mock.User.Name.get -> string
NGitLab.Mock.User.Name.set -> void
NGitLab.Mock.User.Namespace.get -> NGitLab.Mock.Group
NGitLab.Mock.User.State.get -> NGitLab.Mock.UserState
NGitLab.Mock.User.State.set -> void
NGitLab.Mock.User.ToClientSession() -> NGitLab.Models.Session
NGitLab.Mock.User.ToClientUser() -> NGitLab.Models.User
NGitLab.Mock.User.User(string userName) -> void
NGitLab.Mock.User.UserName.get -> string
NGitLab.Mock.User.WebUrl.get -> string
NGitLab.Mock.UserCollection
NGitLab.Mock.UserCollection.Add(string userName) -> NGitLab.Mock.User
NGitLab.Mock.UserCollection.AddNew(string name = null) -> NGitLab.Mock.User
NGitLab.Mock.UserCollection.GetById(long id) -> NGitLab.Mock.User
NGitLab.Mock.UserCollection.GetById(string id) -> NGitLab.Mock.User
NGitLab.Mock.UserCollection.UserCollection(NGitLab.Mock.GitLabObject container) -> void
NGitLab.Mock.UserRef
NGitLab.Mock.UserRef.Email.get -> string
NGitLab.Mock.UserRef.Id.get -> long
NGitLab.Mock.UserRef.Name.get -> string
NGitLab.Mock.UserRef.ToClientAssignee() -> NGitLab.Models.Assignee
NGitLab.Mock.UserRef.ToClientAuthor() -> NGitLab.Models.Author
NGitLab.Mock.UserRef.ToUserClient() -> NGitLab.Models.User
NGitLab.Mock.UserRef.UserName.get -> string
NGitLab.Mock.UserRef.UserRef(NGitLab.Mock.User user) -> void
NGitLab.Mock.UserState
NGitLab.Mock.UserState.active = 0 -> NGitLab.Mock.UserState
NGitLab.Mock.UserState.blocked = 1 -> NGitLab.Mock.UserState
NGitLab.Mock.UserState.deactivated = 2 -> NGitLab.Mock.UserState
override NGitLab.Mock.BadgeCollection.Add(NGitLab.Mock.Badge item) -> void
override NGitLab.Mock.Config.GitLabCollection<TItem>.InsertItem(int index, TItem item) -> void
override NGitLab.Mock.Config.GitLabCollection<TItem>.SetItem(int index, TItem item) -> void
override NGitLab.Mock.EventCollection.Add(NGitLab.Mock.Event item) -> void
override NGitLab.Mock.GroupCollection.Add(NGitLab.Mock.Group group) -> void
override NGitLab.Mock.GroupHookCollection.Add(NGitLab.Mock.GroupHook item) -> void
override NGitLab.Mock.IssueCollection.Add(NGitLab.Mock.Issue item) -> void
override NGitLab.Mock.JobCollection.Add(NGitLab.Mock.Job job) -> void
override NGitLab.Mock.LabelsCollection.Add(NGitLab.Mock.Label label) -> void
override NGitLab.Mock.MergeRequestCollection.Add(NGitLab.Mock.MergeRequest mergeRequest) -> void
override NGitLab.Mock.MergeRequestComment.NoteableType.get -> string
override NGitLab.Mock.MergeRequestComment.NoticableId.get -> long
override NGitLab.Mock.MergeRequestComment.NoticableIid.get -> long
override NGitLab.Mock.MilestoneCollection.Add(NGitLab.Mock.Milestone item) -> void
override NGitLab.Mock.NonTextFile.Content.get -> byte[]
override NGitLab.Mock.NoteCollection<T>.Add(T item) -> void
override NGitLab.Mock.PipelineCollection.Add(NGitLab.Mock.Pipeline pipeline) -> void
override NGitLab.Mock.PipelineScheduleCollection.Add(NGitLab.Mock.PipelineSchedule schedule) -> void
override NGitLab.Mock.ProjectCollection.Add(NGitLab.Mock.Project project) -> void
override NGitLab.Mock.ProjectHookCollection.Add(NGitLab.Mock.ProjectHook item) -> void
override NGitLab.Mock.ProjectIssueNote.NoteableType.get -> string
override NGitLab.Mock.ProjectIssueNote.NoticableId.get -> long
override NGitLab.Mock.ProjectIssueNote.NoticableIid.get -> long
override NGitLab.Mock.ProtectedBranchCollection.Add(NGitLab.Mock.ProtectedBranch branch) -> void
override NGitLab.Mock.ReleaseCollection.Add(NGitLab.Mock.ReleaseInfo release) -> void
override NGitLab.Mock.ResourceLabelEventCollection.Add(NGitLab.Mock.ResourceLabelEvent item) -> void
override NGitLab.Mock.ResourceMilestoneEventCollection.Add(NGitLab.Mock.ResourceMilestoneEvent item) -> void
override NGitLab.Mock.ResourceStateEventCollection.Add(NGitLab.Mock.ResourceStateEvent item) -> void
override NGitLab.Mock.RunnerCollection.Add(NGitLab.Mock.Runner item) -> void
override NGitLab.Mock.RunnerRef.Equals(object obj) -> bool
override NGitLab.Mock.RunnerRef.GetHashCode() -> int
override NGitLab.Mock.SystemHookCollection.Add(NGitLab.Mock.SystemHook item) -> void
override NGitLab.Mock.TextFile.Content.get -> byte[]
override NGitLab.Mock.User.ToString() -> string
override NGitLab.Mock.UserCollection.Add(NGitLab.Mock.User user) -> void
static NGitLab.Mock.Clients.LibGit2SharpExtensions.ToBranchClient(this LibGit2Sharp.Branch branch, NGitLab.Mock.Project project) -> NGitLab.Models.Branch
static NGitLab.Mock.Clients.LibGit2SharpExtensions.ToCommitClient(this LibGit2Sharp.Commit commit, NGitLab.Mock.Project project) -> NGitLab.Models.Commit
static NGitLab.Mock.Clients.LibGit2SharpExtensions.ToCommitInfo(this LibGit2Sharp.Commit commit) -> NGitLab.Models.CommitInfo
static NGitLab.Mock.Config.GitLabConfig.Deserialize(string content) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.AsDefaultUser(this NGitLab.Mock.Config.GitLabUser user) -> NGitLab.Mock.Config.GitLabUser
static NGitLab.Mock.Config.GitLabHelpers.BuildClient(this NGitLab.Mock.Config.GitLabConfig config, string username = null) -> NGitLab.IGitLabClient
static NGitLab.Mock.Config.GitLabHelpers.BuildServer(this NGitLab.Mock.Config.GitLabConfig config) -> NGitLab.Mock.GitLabServer
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabCommit commit, System.Action<NGitLab.Mock.Config.GitLabCommit> configure) -> NGitLab.Mock.Config.GitLabCommit
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabConfig config, System.Action<NGitLab.Mock.Config.GitLabConfig> configure) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabGroup group, System.Action<NGitLab.Mock.Config.GitLabGroup> configure) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabIssue issue, System.Action<NGitLab.Mock.Config.GitLabIssue> configure) -> NGitLab.Mock.Config.GitLabIssue
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, System.Action<NGitLab.Mock.Config.GitLabMergeRequest> configure) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabPipeline pipeline, System.Action<NGitLab.Mock.Config.GitLabPipeline> configure) -> NGitLab.Mock.Config.GitLabPipeline
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabProject project, System.Action<NGitLab.Mock.Config.GitLabProject> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.Configure(this NGitLab.Mock.Config.GitLabUser user, System.Action<NGitLab.Mock.Config.GitLabUser> configure) -> NGitLab.Mock.Config.GitLabUser
static NGitLab.Mock.Config.GitLabHelpers.CreateClient(this NGitLab.Mock.GitLabServer server, string username = null) -> NGitLab.IGitLabClient
static NGitLab.Mock.Config.GitLabHelpers.SetDefaultBranch(this NGitLab.Mock.Config.GitLabConfig config, string branchName) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.SetDefaultUser(this NGitLab.Mock.Config.GitLabConfig config, string username) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.SetDefaultVisibility(this NGitLab.Mock.Config.GitLabConfig config, NGitLab.Models.VisibilityLevel visibility) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.ToConfig(this NGitLab.Mock.GitLabServer server) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithApprover(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, string approver) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.WithComment(this NGitLab.Mock.Config.GitLabIssue issue, string message = null, long id = 0, string author = null, bool system = false, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, string thread = null, bool resolvable = false, bool resolved = false, System.Action<NGitLab.Mock.Config.GitLabComment> configure = null) -> NGitLab.Mock.Config.GitLabIssue
static NGitLab.Mock.Config.GitLabHelpers.WithComment(this NGitLab.Mock.Config.GitLabIssue issue, string message, System.Action<NGitLab.Mock.Config.GitLabComment> configure) -> NGitLab.Mock.Config.GitLabIssue
static NGitLab.Mock.Config.GitLabHelpers.WithComment(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, string message = null, long id = 0, string author = null, bool system = false, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, string thread = null, bool resolvable = false, bool resolved = false, System.Action<NGitLab.Mock.Config.GitLabComment> configure = null) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.WithComment(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, string message, System.Action<NGitLab.Mock.Config.GitLabComment> configure) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.WithCommit(this NGitLab.Mock.Config.GitLabProject project, string message = null, string user = null, string sourceBranch = null, string targetBranch = null, string fromBranch = null, System.Collections.Generic.IEnumerable<string> tags = null, string alias = null, System.Action<NGitLab.Mock.Config.GitLabCommit> configure = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithCommit(this NGitLab.Mock.Config.GitLabProject project, string message, string user, System.Action<NGitLab.Mock.Config.GitLabCommit> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithFile(this NGitLab.Mock.Config.GitLabCommit commit, string relativePath, string content = "") -> NGitLab.Mock.Config.GitLabCommit
static NGitLab.Mock.Config.GitLabHelpers.WithGroup(this NGitLab.Mock.Config.GitLabConfig config, string name = null, long id = 0, string namespace = null, string description = null, NGitLab.Models.VisibilityLevel? visibility = null, bool addDefaultUserAsMaintainer = false, System.Action<NGitLab.Mock.Config.GitLabGroup> configure = null) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithGroup(this NGitLab.Mock.Config.GitLabConfig config, string name, System.Action<NGitLab.Mock.Config.GitLabGroup> configure) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithGroupOfFullPath(this NGitLab.Mock.Config.GitLabConfig config, string fullPath, string name = null, long id = 0, string description = null, NGitLab.Models.VisibilityLevel? visibility = null, bool addDefaultUserAsMaintainer = false, System.Action<NGitLab.Mock.Config.GitLabGroup> configure = null) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithGroupPermission(this NGitLab.Mock.Config.GitLabGroup grp, string groupName, NGitLab.Models.AccessLevel level) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.WithGroupPermission(this NGitLab.Mock.Config.GitLabProject project, string groupName, NGitLab.Models.AccessLevel level) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithIssue(this NGitLab.Mock.Config.GitLabProject project, string title = null, long id = 0, string description = null, string author = null, string assignee = null, string milestone = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, System.DateTime? closedAt = null, System.Collections.Generic.IEnumerable<string> labels = null, System.Action<NGitLab.Mock.Config.GitLabIssue> configure = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithIssue(this NGitLab.Mock.Config.GitLabProject project, string title, string author, System.Action<NGitLab.Mock.Config.GitLabIssue> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithJob(this NGitLab.Mock.Config.GitLabPipeline pipeline, string name = null, string stage = null, NGitLab.JobStatus status = NGitLab.JobStatus.Unknown, System.DateTime? createdAt = null, System.DateTime? startedAt = null, System.DateTime? finishedAt = null, bool allowFailure = false, NGitLab.Mock.Config.GitLabPipeline downstreamPipeline = null, System.Action<NGitLab.Mock.Config.GitLabJob> configure = null) -> NGitLab.Mock.Config.GitLabPipeline
static NGitLab.Mock.Config.GitLabHelpers.WithLabel(this NGitLab.Mock.Config.GitLabGroup group, string name, string color = null, string description = null) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.WithLabel(this NGitLab.Mock.Config.GitLabIssue issue, string label) -> NGitLab.Mock.Config.GitLabIssue
static NGitLab.Mock.Config.GitLabHelpers.WithLabel(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, string label) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.WithLabel(this NGitLab.Mock.Config.GitLabProject project, string name, string color = null, string description = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithMergeCommit(this NGitLab.Mock.Config.GitLabProject project, string sourceBranch, string targetBranch = null, string user = null, bool deleteSourceBranch = false, System.Collections.Generic.IEnumerable<string> tags = null, System.Action<NGitLab.Mock.Config.GitLabCommit> configure = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithMergeRequest(this NGitLab.Mock.Config.GitLabProject project, string sourceBranch = null, string title = null, long id = 0, string targetBranch = null, string description = null, string author = null, string assignee = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, System.DateTime? closedAt = null, System.DateTime? mergedAt = null, System.Collections.Generic.IEnumerable<string> approvers = null, System.Collections.Generic.IEnumerable<string> labels = null, string milestone = null, System.Action<NGitLab.Mock.Config.GitLabMergeRequest> configure = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithMergeRequest(this NGitLab.Mock.Config.GitLabProject project, string sourceBranch, string title, string author, System.Action<NGitLab.Mock.Config.GitLabMergeRequest> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithMilestone(this NGitLab.Mock.Config.GitLabGroup group, string title, long id = 0, string description = null, System.DateTime? dueDate = null, System.DateTime? startDate = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, System.DateTime? closedAt = null, System.Action<NGitLab.Mock.Config.GitLabMilestone> configure = null) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.WithMilestone(this NGitLab.Mock.Config.GitLabGroup group, string title, System.Action<NGitLab.Mock.Config.GitLabMilestone> configure) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.WithMilestone(this NGitLab.Mock.Config.GitLabProject project, string title, long id = 0, string description = null, System.DateTime? dueDate = null, System.DateTime? startDate = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null, System.DateTime? closedAt = null, System.Action<NGitLab.Mock.Config.GitLabMilestone> configure = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithMilestone(this NGitLab.Mock.Config.GitLabProject project, string title, System.Action<NGitLab.Mock.Config.GitLabMilestone> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithPipeline(this NGitLab.Mock.Config.GitLabProject project, string ref, System.Action<NGitLab.Mock.Config.GitLabPipeline> configure) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithProject(this NGitLab.Mock.Config.GitLabConfig config, string name = null, long id = 0, string namespace = null, string description = null, string defaultBranch = null, NGitLab.Models.VisibilityLevel visibility = NGitLab.Models.VisibilityLevel.Internal, bool initialCommit = false, bool addDefaultUserAsMaintainer = false, string clonePath = null, string cloneParameters = null, System.Action<NGitLab.Mock.Config.GitLabProject> configure = null) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithProject(this NGitLab.Mock.Config.GitLabConfig config, string name, System.Action<NGitLab.Mock.Config.GitLabProject> configure) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithProjectOfFullPath(this NGitLab.Mock.Config.GitLabConfig config, string fullPath, string name = null, long id = 0, string description = null, string defaultBranch = null, NGitLab.Models.VisibilityLevel visibility = NGitLab.Models.VisibilityLevel.Internal, bool initialCommit = false, bool addDefaultUserAsMaintainer = false, string clonePath = null, string cloneParameters = null, System.Action<NGitLab.Mock.Config.GitLabProject> configure = null) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithRelease(this NGitLab.Mock.Config.GitLabProject project, string author, string tagName, System.DateTime? createdAt = null, System.DateTime? releasedAt = null) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.Config.GitLabHelpers.WithSubModule(this NGitLab.Mock.Config.GitLabCommit commit, string projectName) -> NGitLab.Mock.Config.GitLabCommit
static NGitLab.Mock.Config.GitLabHelpers.WithSystemComment(this NGitLab.Mock.Config.GitLabIssue issue, string message = null, string innerHtml = null, long id = 0, string author = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null) -> NGitLab.Mock.Config.GitLabIssue
static NGitLab.Mock.Config.GitLabHelpers.WithSystemComment(this NGitLab.Mock.Config.GitLabMergeRequest mergeRequest, string message = null, string innerHtml = null, long id = 0, string author = null, System.DateTime? createdAt = null, System.DateTime? updatedAt = null) -> NGitLab.Mock.Config.GitLabMergeRequest
static NGitLab.Mock.Config.GitLabHelpers.WithTag(this NGitLab.Mock.Config.GitLabCommit commit, string name) -> NGitLab.Mock.Config.GitLabCommit
static NGitLab.Mock.Config.GitLabHelpers.WithUser(this NGitLab.Mock.Config.GitLabConfig config, string username, string name = null, string email = null, string avatarUrl = null, bool isAdmin = false, bool isDefault = false, System.Action<NGitLab.Mock.Config.GitLabUser> configure = null) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithUser(this NGitLab.Mock.Config.GitLabConfig config, string username, System.Action<NGitLab.Mock.Config.GitLabUser> configure) -> NGitLab.Mock.Config.GitLabConfig
static NGitLab.Mock.Config.GitLabHelpers.WithUserPermission(this NGitLab.Mock.Config.GitLabGroup group, string user, NGitLab.Models.AccessLevel level) -> NGitLab.Mock.Config.GitLabGroup
static NGitLab.Mock.Config.GitLabHelpers.WithUserPermission(this NGitLab.Mock.Config.GitLabProject project, string user, NGitLab.Models.AccessLevel level) -> NGitLab.Mock.Config.GitLabProject
static NGitLab.Mock.File.CreateFromText(string path, string content) -> NGitLab.Mock.File
static NGitLab.Mock.File.CreateFromText(string path, string content, System.Text.Encoding encoding) -> NGitLab.Mock.File
static NGitLab.Mock.GitLabClientMockExtensions.WithGraphQLClient(this NGitLab.IGitLabClient client, NGitLab.IGraphQLClient graphQLClient) -> NGitLab.IGitLabClient
static NGitLab.Mock.GroupExtensions.FindById(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Group> groups, long id) -> NGitLab.Mock.Group
static NGitLab.Mock.GroupExtensions.FindByNamespacedPath(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Group> groups, string pathWithNamespace) -> NGitLab.Mock.Group
static NGitLab.Mock.GroupExtensions.FindGroup(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Group> groups, string idOrPathWithNamespace) -> NGitLab.Mock.Group
static NGitLab.Mock.ProjectExtensions.FindById(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Project> projects, long id) -> NGitLab.Mock.Project
static NGitLab.Mock.ProjectExtensions.FindByNamespacedPath(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Project> projects, string pathWithNamespace) -> NGitLab.Mock.Project
static NGitLab.Mock.ProjectExtensions.FindProject(this System.Collections.Generic.IEnumerable<NGitLab.Mock.Project> projects, string idOrPathWithNamespace) -> NGitLab.Mock.Project
static NGitLab.Mock.StringExtensions.Contains(this string source, string toCheck, System.StringComparison comparison) -> bool
static NGitLab.Mock.TemporaryDirectory.Create() -> NGitLab.Mock.TemporaryDirectory
static NGitLab.Mock.TemporaryDirectory.DeleteDirectory(string path) -> void
static NGitLab.Mock.TemporaryDirectory.DeleteFile(string path) -> void
static NGitLab.Mock.UserRef.implicit operator NGitLab.Mock.UserRef(NGitLab.Mock.User user) -> NGitLab.Mock.UserRef
virtual NGitLab.Mock.Collection<T>.Add(T item) -> void
